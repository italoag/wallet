{"knowledge_relations":[{"id":3783,"source_id":"ce4fa48e-73ad-43bd-a32c-2fbfe5a1d6e4","target_id":"ec1d750e-0f1c-4672-8b01-ad6e1c3d6ac5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ce4fa48e-73ad-43bd-a32c-2fbfe5a1d6e4 -\u003e ec1d750e-0f1c-4672-8b01-ad6e1c3d6ac5","gmt_create":"2025-09-22T12:10:58.674021-03:00","gmt_modified":"2025-09-22T12:10:58.674021-03:00"},{"id":3784,"source_id":"ce4fa48e-73ad-43bd-a32c-2fbfe5a1d6e4","target_id":"3c4a5eb3-25cb-44d0-893e-8906fae3420d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ce4fa48e-73ad-43bd-a32c-2fbfe5a1d6e4 -\u003e 3c4a5eb3-25cb-44d0-893e-8906fae3420d","gmt_create":"2025-09-22T12:10:58.756086-03:00","gmt_modified":"2025-09-22T12:10:58.756086-03:00"},{"id":3785,"source_id":"ce4fa48e-73ad-43bd-a32c-2fbfe5a1d6e4","target_id":"de98026c-8a6d-48b8-842a-af8265ef8854","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ce4fa48e-73ad-43bd-a32c-2fbfe5a1d6e4 -\u003e de98026c-8a6d-48b8-842a-af8265ef8854","gmt_create":"2025-09-22T12:10:58.952818-03:00","gmt_modified":"2025-09-22T12:10:58.952818-03:00"},{"id":3786,"source_id":"ce4fa48e-73ad-43bd-a32c-2fbfe5a1d6e4","target_id":"559ecacd-2b5f-46c0-b13d-2e7ed2d1ec15","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ce4fa48e-73ad-43bd-a32c-2fbfe5a1d6e4 -\u003e 559ecacd-2b5f-46c0-b13d-2e7ed2d1ec15","gmt_create":"2025-09-22T12:10:59.068679-03:00","gmt_modified":"2025-09-22T12:10:59.068679-03:00"},{"id":3787,"source_id":"ce4fa48e-73ad-43bd-a32c-2fbfe5a1d6e4","target_id":"620ec0d0-4bae-4b04-a926-92317891c82c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ce4fa48e-73ad-43bd-a32c-2fbfe5a1d6e4 -\u003e 620ec0d0-4bae-4b04-a926-92317891c82c","gmt_create":"2025-09-22T12:10:59.168587-03:00","gmt_modified":"2025-09-22T12:10:59.168587-03:00"},{"id":3788,"source_id":"948497f5-0b24-4574-a574-6e362d08f87b","target_id":"d9dcba06-f617-4359-930f-e42a9ed634f4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 948497f5-0b24-4574-a574-6e362d08f87b -\u003e d9dcba06-f617-4359-930f-e42a9ed634f4","gmt_create":"2025-09-22T12:10:59.264661-03:00","gmt_modified":"2025-09-22T12:10:59.264661-03:00"},{"id":3789,"source_id":"948497f5-0b24-4574-a574-6e362d08f87b","target_id":"84c9840d-c46a-4df6-8585-1361ed8eaa94","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 948497f5-0b24-4574-a574-6e362d08f87b -\u003e 84c9840d-c46a-4df6-8585-1361ed8eaa94","gmt_create":"2025-09-22T12:10:59.275202-03:00","gmt_modified":"2025-09-22T12:10:59.275202-03:00"},{"id":3790,"source_id":"948497f5-0b24-4574-a574-6e362d08f87b","target_id":"61408fc3-924f-4ac7-9cba-788471974f26","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 948497f5-0b24-4574-a574-6e362d08f87b -\u003e 61408fc3-924f-4ac7-9cba-788471974f26","gmt_create":"2025-09-22T12:10:59.381886-03:00","gmt_modified":"2025-09-22T12:10:59.381886-03:00"},{"id":3791,"source_id":"948497f5-0b24-4574-a574-6e362d08f87b","target_id":"d0089d78-6c00-42fc-af2f-1815cd66db53","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 948497f5-0b24-4574-a574-6e362d08f87b -\u003e d0089d78-6c00-42fc-af2f-1815cd66db53","gmt_create":"2025-09-22T12:10:59.457628-03:00","gmt_modified":"2025-09-22T12:10:59.457628-03:00"},{"id":3792,"source_id":"948497f5-0b24-4574-a574-6e362d08f87b","target_id":"0661ee96-6d5f-4057-8935-ea333ce68d41","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 948497f5-0b24-4574-a574-6e362d08f87b -\u003e 0661ee96-6d5f-4057-8935-ea333ce68d41","gmt_create":"2025-09-22T12:10:59.459259-03:00","gmt_modified":"2025-09-22T12:10:59.459259-03:00"},{"id":3793,"source_id":"948497f5-0b24-4574-a574-6e362d08f87b","target_id":"d87afe33-4b26-4239-8c59-733c17a4187f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 948497f5-0b24-4574-a574-6e362d08f87b -\u003e d87afe33-4b26-4239-8c59-733c17a4187f","gmt_create":"2025-09-22T12:10:59.4611-03:00","gmt_modified":"2025-09-22T12:10:59.4611-03:00"},{"id":3794,"source_id":"948497f5-0b24-4574-a574-6e362d08f87b","target_id":"6faf4b21-f1cd-4533-b26b-a88081975b40","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 948497f5-0b24-4574-a574-6e362d08f87b -\u003e 6faf4b21-f1cd-4533-b26b-a88081975b40","gmt_create":"2025-09-22T12:10:59.462962-03:00","gmt_modified":"2025-09-22T12:10:59.462962-03:00"},{"id":3795,"source_id":"948497f5-0b24-4574-a574-6e362d08f87b","target_id":"780eea63-efce-40b8-8177-5b240c03ff8b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 948497f5-0b24-4574-a574-6e362d08f87b -\u003e 780eea63-efce-40b8-8177-5b240c03ff8b","gmt_create":"2025-09-22T12:10:59.489901-03:00","gmt_modified":"2025-09-22T12:10:59.489901-03:00"},{"id":3796,"source_id":"abbb2c06-0209-4bcc-a014-9e8b8e5144b1","target_id":"0eb750a5-01fe-4d86-9269-3f8493ebeeaa","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: abbb2c06-0209-4bcc-a014-9e8b8e5144b1 -\u003e 0eb750a5-01fe-4d86-9269-3f8493ebeeaa","gmt_create":"2025-09-22T12:10:59.491002-03:00","gmt_modified":"2025-09-22T12:10:59.491002-03:00"},{"id":3797,"source_id":"abbb2c06-0209-4bcc-a014-9e8b8e5144b1","target_id":"51b3f5f3-1606-4472-ad48-454d5a122b5f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: abbb2c06-0209-4bcc-a014-9e8b8e5144b1 -\u003e 51b3f5f3-1606-4472-ad48-454d5a122b5f","gmt_create":"2025-09-22T12:10:59.492227-03:00","gmt_modified":"2025-09-22T12:10:59.492227-03:00"},{"id":3798,"source_id":"abbb2c06-0209-4bcc-a014-9e8b8e5144b1","target_id":"ef3e1bfb-3cc1-45b1-8b7d-4a78d304bb90","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: abbb2c06-0209-4bcc-a014-9e8b8e5144b1 -\u003e ef3e1bfb-3cc1-45b1-8b7d-4a78d304bb90","gmt_create":"2025-09-22T12:10:59.493384-03:00","gmt_modified":"2025-09-22T12:10:59.493384-03:00"},{"id":3799,"source_id":"abbb2c06-0209-4bcc-a014-9e8b8e5144b1","target_id":"ce268829-9e94-4c57-81d2-759e03369a4a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: abbb2c06-0209-4bcc-a014-9e8b8e5144b1 -\u003e ce268829-9e94-4c57-81d2-759e03369a4a","gmt_create":"2025-09-22T12:10:59.494838-03:00","gmt_modified":"2025-09-22T12:10:59.494838-03:00"},{"id":3800,"source_id":"d62b9734-60af-4f13-ae37-15649018bb8f","target_id":"b83feff1-111a-4f74-97d1-7f12c787eb50","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d62b9734-60af-4f13-ae37-15649018bb8f -\u003e b83feff1-111a-4f74-97d1-7f12c787eb50","gmt_create":"2025-09-22T12:10:59.495952-03:00","gmt_modified":"2025-09-22T12:10:59.495952-03:00"},{"id":3801,"source_id":"d62b9734-60af-4f13-ae37-15649018bb8f","target_id":"1531a2bb-7e5b-4bee-a485-aad5d0773fb6","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d62b9734-60af-4f13-ae37-15649018bb8f -\u003e 1531a2bb-7e5b-4bee-a485-aad5d0773fb6","gmt_create":"2025-09-22T12:10:59.497224-03:00","gmt_modified":"2025-09-22T12:10:59.497224-03:00"},{"id":3802,"source_id":"d62b9734-60af-4f13-ae37-15649018bb8f","target_id":"4e5459df-b500-49a0-9fa3-c2fd38d8c441","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d62b9734-60af-4f13-ae37-15649018bb8f -\u003e 4e5459df-b500-49a0-9fa3-c2fd38d8c441","gmt_create":"2025-09-22T12:10:59.498284-03:00","gmt_modified":"2025-09-22T12:10:59.498284-03:00"},{"id":3803,"source_id":"b18eebef-bbe8-4291-8735-1e24909dea8a","target_id":"fb78e5f5-3bb5-4051-9d35-75c403e35303","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: b18eebef-bbe8-4291-8735-1e24909dea8a -\u003e fb78e5f5-3bb5-4051-9d35-75c403e35303","gmt_create":"2025-09-22T12:10:59.500159-03:00","gmt_modified":"2025-09-22T12:10:59.500159-03:00"},{"id":3804,"source_id":"b18eebef-bbe8-4291-8735-1e24909dea8a","target_id":"c7350e77-c45a-4bc9-b8fa-db80069b0014","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: b18eebef-bbe8-4291-8735-1e24909dea8a -\u003e c7350e77-c45a-4bc9-b8fa-db80069b0014","gmt_create":"2025-09-22T12:10:59.501905-03:00","gmt_modified":"2025-09-22T12:10:59.501905-03:00"}],"wiki_catalogs":[{"id":"aa85f535-7e0e-4504-a7ce-6b31b4dd1050","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Project Overview","description":"project-overview","prompt":"Create comprehensive content for this section focused on the bloco-wallet-java project. Explain its purpose as a backend wallet management system built with Spring Boot and Java 25, designed for event-driven fund operations and transaction processing. Describe the high-level architecture including Clean Architecture (Ports and Adapters), domain-driven design, and integration with Kafka, databases, and CloudEvents. Highlight key features such as wallet creation, fund transfers, withdrawals, and transaction confirmation via use cases. Illustrate the flow from user request to domain event publication and infrastructure persistence. Include a system context diagram showing interaction between use cases, domain models, event consumers, and external systems. Document the role of the WalletHubApplication entry point, including @SpringBootApplication and entity scanning configuration. Provide a beginner-friendly explanation of how components fit together, while also detailing technical decisions like reactive programming support and multi-database integration. Reference real code examples from the main application class and README setup instructions.","parent_id":"","order":0,"progress_status":"completed","dependent_files":"README.md,src/main/java/dev/bloco/wallet/hub/WalletHubApplication.java","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:01:21.886004-03:00","gmt_modified":"2025-09-22T11:08:28.891531-03:00","raw_data":"WikiEncrypted:0MI1/XkBoMl0lTbK6t0Cn/+8FdvqrJ62ianMLvZj02dqzTho5arqNtbUziutSzUZOqm7yOpCxfwhmmzZqG/lBD3pMVXunyKmPUgiOnGRUOAZLHkemlqFKY4BgD0YU+CE2imAOrG88vqX2+HQZMj8h0hrpS8nWz83GDyY9icTm8kUQjyNNS82qi6Zhm6YPelgnSFwjI5FUgPd0rOZC62FWbvsgQgbLlV4eRifO67F+1JHHAHYeDd76KATEpwgCFbbTRGTd2vl875KEADfwHaWn5y1e/FhZJm19IAEmRTXAH4ZiMtoLTCMEQ2eFBop7tCYiHOxPYCO5UKWUSmRGw1KI+RB5XO+4NM8AYjQjZ1kynjLj9+AUpaPdjfiBWNFPxpPWswBnDc8m2ZLCyl43M1mLbkpPq1NfWfYh9Y4S6c2QdIrJliHOEZnl5q5nMLQHi3t/Khk2YKs2wSapZrioZrgfbM9/CW72ERv7vtqTSf4ZF+yt+mw31PRZJCbKe5mrpoIAhC/LlTfBfxcDyi0T1lgcSs9bVLf22b7jVD91a9FUWCa2dVQJKRpO9ih6hZL75P6VvOqxshkCVJzWGmJSVbbkXCZB2/XYW+aP8B0I2KbdEonyEd21dmrkRdxPI7w4LjnsgFQwCJaePlmauMNTHHfGCSGe7pfBqGiUi4C4BoPXq3SiabXlrW5U6vvFqBBOrpfdDUOQCwx307AFnVms9/xYIzUVa9rw3hCR0W0P+Eiz6LV26Ib9AIjdFJpRT1rYKyhgT1fpi3xbWr3+TNNnOyRESIBp3UuSetAMum8AmFokD92AK1vcsBGUCgLQm9MtmatyXh58mCYCyHe7/ICpAfQ7ObUjJkFjO1Fvp0OltfZWT5WyJb7FbWpLqAALHYa29CfgxiIDOs4fd81xykr06v0ltwP/EkhRqohjJ9hBaBhUhWThVkvBBRGh2fNHVphHOxtPlGNUMuxhjy1TFqdJgc3dzC/eI0BsAJO7hru1HP1boI28QbV5jnGlB1Js2MUY+Cxw8sGSBL1ddZt8gkCHrRUTnRhZ7t2lppbXazpcBSurXYMG1TP5Jqt6W8kaWJZdcfBKf0rUNBFsFVirfBH35WFFpj7pbp8uLUC9wu0V4sqEekcBFcn8fZv7I9heLqyiKwZeRqvz0FWGO7LlhuV6ZeHWtNk5kEDOvoHkaR+DfFt/wU5rj3eAvR99xaiMDdncm/XGc+b6vL/sRMEEGWqARBecR/2oSE7seIvbzj59AfX/Q/PxMRtCCsRTsNtV7VPNKdxoYhX4EkudB5+VuEkABAGDveFpRyshLrfvLlnGTlvEp7V3K8Bxtw9AuQ8ctKMA/zTxBLSYWTWenxwxMfPfMrbM+lJIXJqIqFbhIAE422Br/MtDqNxW5poX8j0FxtFZdKAX43j9M66fFUSJxxVEmFyj9wSLP9V+OJ2xZIaQa3NSiJt0B7LnlN8q6cM8fvHp4bDqjkUIO05z86vU9ialYPahPETUzF36Bhj9LrC/WLA4tSSWnNmpsdvWpDqN0VPqxMZNML1yXCl1KH8Y0gfUJACmCcxVO8MnCYuLSP5QQvgGkcnu5UpWOO5eeDt/5cyoh6TfNls9N0G+6YKYGIRkyvTictj3ClmlhTatyzza8NIB421v3uNJxf3dxyzzSxwg1B0QT9SYCi28CRcCkWwXk6jLzvaJlIVpmyjD4VpN6DowX00acCWo0habKNm2krbYhis+tc7YhZrtk3f6rJYJfJdiFe6fce1QVLYYz6C3CPZOXWntIxW0F4YuhE+3HIZlpbtJekqS7CgavpFXa6ekJP5kXsTLDKZ03qfEVay0jZwGca+WhrP88kJgjQO3cG0e63ltMdxlF/cT6jAh7Z4aPtuHKP7+e4QC5OVS4HCtEPi498/huLPrZUbNYHx9X2Eo2+3w2U5Ez6Am63dWKJAT6M3+Q==","layer_level":0},{"id":"9e043efe-b53f-4f4b-b092-4ebe60b4babe","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Wallet","description":"wallet-model","prompt":"Create comprehensive data model documentation for the Wallet entity in bloco-wallet-java. Detail all fields including id, name, description, addressIds, createdAt, updatedAt, balance, and correlationId. Explain the inheritance from AggregateRoot and its role in domain event management. Document the static factory method `create()` that initializes a new Wallet and registers a WalletCreatedEvent. Describe lifecycle methods such as updateInfo(), addAddress(), removeAddress(), addFunds(), and withdrawFunds(), including validation rules and domain event emissions. Illustrate relationships with Address, Transaction, and User entities. Include sample usage scenarios, balance management logic, and immutability patterns. Reference domain event interactions with infrastructure layers via Kafka. Provide code examples showing Wallet creation and fund operations, and explain error handling for invalid amounts.","parent_id":"60954f52-83b0-4982-8f6a-e7d2faa3c179","order":0,"progress_status":"completed","dependent_files":"src/main/java/dev/bloco/wallet/hub/domain/model/Wallet.java,src/main/java/dev/bloco/wallet/hub/domain/model/common/AggregateRoot.java","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:02:32.724996-03:00","gmt_modified":"2025-09-22T11:28:58.536293-03:00","raw_data":"WikiEncrypted:CQu8dD4IeMN9hit5M51jWtcrzJ0gaGYq4WKx11CwudEE2rV7bSqqET/Ypp+PtgeLK4NnvNivCgKP8RRA76y8UjMccTcLgsLVZRmycwLIi5TnzIusvB/7pIdsa8IN2j1GwwNzfyT8yNbvxseOEfmnc4WLTYyPcvIVf84wB7IYB/HLJxz2xoQ0dNmCcHGkfB+pcwi3G0W0KmuMdoqEy7fUXtaJV7WkuToQYRpTZemTpCLgwhIyoeGO1GVZM5AwfIpO0LI3vw8ujg1jik/kZTe2irNq32LlE4OXVqkp48MZWYuvhGGavSkW5LGL3jzmiJeVcbbthfJDWZ/jkFQ/4gmCDlcckRTXMxOfPkU5UPedT5NCpor7w1OH5FRHPocaqeT4Uang9b7DVfH6xO6kf3x9hS1QuOvvREAMKEi2PdCPTmEc/v5E8zebk5q/vmH5jWui/LrDx8mAATxJgV6UYBw48MCADB2e+nqTM2oyL0ySIMtOms8dRnggwVS4WMCMCNFDAfOnk8PGEN0D3xi15G7LbqUvqKjfsJnSOjgRTVl4Y7eq511wRS0dIE2YL0VfsypnM83vLEHyDHZZ9G3LqVGWtd2mgSyBpruCgVBUVlRqcniBnMMCkdcFIkzg5k6b2yXhCm9Vld7pJP2TWdgMmVoc65+6n5Du8Le2IMENQfXVFEhie0gwbsTDv+wFCS6Xz7XGQHGL+zhXeVvuAnEqzh46Ok+W7Wd7g4amoJ3sL/agMA+EsvZrA7d1ItV4wkqaTyXm4o/nxC3yXtHU8HhNtsw++OxbO5Ce/t0EK1z4ls9lBLJEDto1LJbtMkxj0rLGRnjQw9+Wt3NxZGPHABgTT84eYRT99Dkfl+wo0OIKdCBKsII3XO6AopV7WgGAWQdgRbE3mZBnRNXG2q9NcvcpXS2Wad3kVsQV27SYfw2ZXGzvUhk5JT/3uk7JdPCnRjTQYDJNfx6MczHSBtPQeCeZ75hYhb2+R3nv7K3NDAAjVDDoF1qYg3bqvhoZWGrpn9dXR3Mv9usyApJ5FIzqTarsvPKg+yTA+1o7JubxhLQdYP+lzMvoEmcgAiTPCHt7pgTh4tmSne1wWYKEEPgGi1H44sMKQxBawtj+xTUHaLyLATAK/G1hHts5W/y8Od2HwVUKtSEo8yFBCb50W40YrmbKvZ96yazJxn3+/V26QEql2E4glhmBoiFxmItYVyYE1WE6pz00hCau9OcYUhtAaL6Lm5ADbZx0Gt/FymBgvTJc/u6kdsxGbAb/yg/6bCxCGDOs/6JaqCJypIYRxeNg/BNpWW7LTXeUjfIaYcWbFgnXgMhx2M/eD7b4oTsVIZ/ua6nVpSFrm8G2/rQ0OjqAB4NqDgabd+5raC4IMF8sDXJZTjzSE7iiAkD98n74khd6LUwebyR4oF1laAfdzfLi9aZmU9BaxsdEH5sAtaXhgEjqEb3QZQvvhru79K9KTKBulbrKsaHiNAeLgSTz/XU/a6C5amI7EYU+Nl8X3F5PFO3ZwvxCzeOq258xF58q7HvEFs3zfK+2wfA/V04A2UQv/Hh8pIn91kfrC89hiME5Z+387wjenGw5RaDOtaZKGnNGGj9NinHBSGCKLaeSudMzRGZ9oawuoivkSUt8aIOfz9a3ctCpqx+oE+ni1rUfHqZuqAa/Ma9VIb+s6kEPY29T+TD46LivylecQMGRUp7uT/tEW6uOpQ4=","layer_level":1},{"id":"0da88566-363f-4168-905c-a7cdb8518e4b","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Create Wallet","description":"create-wallet","prompt":"Develop detailed content for the CreateWalletUseCase in bloco-wallet-java. Explain the purpose of this use case in initializing a new wallet within the system, including input validation, wallet entity creation, and persistence via WalletRepository. Document the invocation flow from service entry point to domain model instantiation and event publishing. Detail the interaction with Vault and KeyPair generation through VaultRepository. Describe how WalletCreatedEvent is published via DomainEventPublisher and eventually persisted in the outbox for Kafka delivery. Include code examples showing method signature, transactional boundaries, and error handling for duplicate wallet IDs or invalid user references. Illustrate integration with Kafka through WalletCreatedEventConsumer. Address common issues such as idempotency, partial failures, and recovery strategies. Provide a practical example from test cases demonstrating successful creation and event emission.","parent_id":"4053af3f-6536-4d0f-b41e-6f8cc3eac024","order":0,"progress_status":"completed","dependent_files":"src/main/java/dev/bloco/wallet/hub/usecase/CreateWalletUseCase.java,src/main/java/dev/bloco/wallet/hub/domain/event/wallet/WalletCreatedEvent.java,src/main/java/dev/bloco/wallet/hub/domain/model/Wallet.java,src/test/java/dev/bloco/wallet/hub/usecase/CreateWalletUseCaseTest.java","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:02:36.461337-03:00","gmt_modified":"2025-09-22T11:32:16.306266-03:00","raw_data":"WikiEncrypted:ONtAVOgAXGrQbG84jUSH3+ot2SZbYiZWey43x7WsIhazZAoFcrI2Y/PtPab7mKYQhDyCV3yruB6zWDcNHn1vtPZ9MQU3VcQDsfN1OgzzhRO0/hZquz5/7lXzNT6VaAqNI/7sf7ER17gT9IhuOyRt51vGgxoYOub8u4RYqmufAe5QB5IrgDBQtKjuDcySZALhlClE2Bvc+d2NTdvMR/pQzHHGbtlXmA3gnBN5UlDU9DGXCKYWXZxI9o6+UlCZYSYdkip8IPliQKdy9goAfgS5Uz4tHk+Z4u7x9XPkgqYuJvpEN+nm3gDvle6/f3+MiFZRM/JdfDho16aK6W+H5Nzj1zJaRevEVtAVo1LriJERYVqU/qhqud8HHKCVnimdLb0g8SL9s4hVEC38WuhenyzSQgLL9JwS/+wgR7qCHfoh7Kre2vq2hF6wmXo2Tno4eVt3B0Jfa/3B7AJ2ukqDRyxg5gOOlBHuBrffy8qHdNq5QzjYQi9RQZAjNiY12BExkieg3xHfpVXoGjaRe1IWq2wb+J51gmLi/dcLcMiWmnKoisn9XPpruLAqS2zBA0XsvBRfefJnv8qbE/nBQdI5AD37c/wAWOmNhDAVKioOO99TArSJN7o/X8kCNoYPLrT1q96JDp6xAL2fJcgwKM+jcmhj5UswrrWv3EGtlAvRw67D9X8/ofpJZyNsLudNyDcqJBtY+W2EFZ4D2BJ+hyp20qXMATvJ4FuKg/g3OOGf7iesmWgGxzZKekMAbdXiD9LiMjqtayPC0zSlh1v69z7rVEWgYfhYNbeKo2wRfkCAHOEqeHeN63XZlaw5ZwLpyJADJx6oFIesprv/2ZPJbWhcZkWL0cK6udpmjnmePSSxaIvfZpLALp8g8Dkh1QPopnU+rBGEzOwSRMdS6UuWlZbDyTZ8FibY2acU5qzCKf8SA+rSgbNKVgWaKehwfpZIvHuUu5/02j/SDQHREseCwuarDLX+FB0Dlq/dnf8Ir6dXroiPFvgbPTMUGnq9J0JIcNPmm4nqm1Cv4p6T+1LG7hH/wUDsnQ5YUH0GagyOJZ08urafYv3mHieAOXA2lCFY2zMQek3Zli12804+f8bl+rREl5VkAg9oqRWErsCVBJ37WSfVSxlN4crU2YfeKASyuw7pFys4kofdnh37jYuJoSNep6O+ZVM90KJmhTJg0JtGmaCOh+zADWibkUs95pTog+iVY/hpVKGTtCY6QP9VsApzG4YPrIQR2MH8XvwednOd9pLHxW34S1pzpvxu09Fn00QD+L7We3DHsMPcrVlgFokgvT1Gh/uQFtHX5GVvi0Fw+f+Umg4Hs2R0fyC99sbGVNVvVWtWMr3Q3UkmaJrh/2ibKafGJQ/9uSsJBGFkkLaC4Bf8xe0MvLQC4VTqtzMDRV95rFzESn1P2AqbcOEkx6lKRfIfdPWv/h0rk2b4n29gAxIgfVLOyFI+Dv06X5PdIfpxngsesIAnBrYp6Q5C40Rhfvgt/soQ9R/9A6fZsN5BlEd0PMW08yjAzgXwX/2eUxI9hCcXoa+1fU0K2KO9WfwsIJc+zroVXQsFjvdWw+drGZu1tp/VGIvxsjLNOdbGNjb8/gYJ/ujmO7lnwZzYfbqUgwqI44S68oISEd5gHDTTH8yjte+10Zk4KyklZsRIwt5FlDIiXv3jiT/GNkEaoch7sGCYc89C5IF0YzmLOYZudgy42Fe2SO3PqIU6DszaO3HLajZ0l8wMu/Em1ISWJUYTWAoP0Z1qw29pTwXUsWsj8gzHwko8olPPb+T+Lo4bxhlZlnAa45vDMxk8F7Rv0MpMkX8irv2gfCDz8BE/3uf4VeZEkQKoycrroYwf7uJh+0g1LTw7BKUdMx7YRP3DAE22qyS3ANoYxhvkQ67Vtorfs0FgA1uLtIsAFsfmZzWc76sthAffuS5XdTwmDVLLsDjD1TtCsNhbYgDilTw1YwZNFUkcSzDXoSc4eJbWJ5Bgp/y/4r8U","layer_level":1},{"id":"4feeebc4-c8b5-4f98-9015-a250807e05d3","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"JPA Entities","description":"jpa-entities","prompt":"Create comprehensive data model documentation for the JPA entities in bloco-wallet-java. Detail the structure and mapping of WalletEntity, TransactionEntity, and UserEntity to their respective database tables (wallets, transactions, users). Explain field definitions, data types, constraints (e.g., nullable, unique), and JPA annotations such as @Entity, @Table, @Id, @GeneratedValue, @Column, and @Enumerated. Document relationships between entities (if any), primary key strategies, and index usage. Include examples of entity design patterns used, such as proper equals/hashCode implementation with Hibernate proxy compatibility in WalletEntity. Illustrate how Lombok annotations (@Getter, @Setter, @ToString) reduce boilerplate. Address schema evolution considerations and best practices for entity versioning and migration.","parent_id":"2623109a-022d-4570-aa53-eb5b4cc4249e","order":0,"progress_status":"completed","dependent_files":"src/main/java/dev/bloco/wallet/hub/infra/provider/data/entity/WalletEntity.java,src/main/java/dev/bloco/wallet/hub/infra/provider/data/entity/TransactionEntity.java,src/main/java/dev/bloco/wallet/hub/infra/provider/data/entity/UserEntity.java","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:03:29.472211-03:00","gmt_modified":"2025-09-22T11:36:33.254573-03:00","raw_data":"WikiEncrypted:Mu4v5qzz2SnNjrT7Mrzivp8Zk7YPZQ49lw6jnEsxXDtctQM4tsTAcTcUPd4LkyGRHiEVSNf4+Xoxvp/ZfVAMGnH69uPVX+3ppfIaQqL23uOWTtvLtuvr/9dePHE28oEqo9iUBORWHISZSDJsJlIofruZBw7U+BNcd3c9V8IK6z06A15Ism0uJogbYCSRB3j4l93gZNAXh273T0vgKsFNKjUX1nvGGKJQa3dTJAuQKVB0AX0smw7l9KuPUjpPSge7fzwGxZwnVACqWqwIig+jKmL1K/TMxVdlnO94Xb+OeItgUtNPq3uT3TzCyOkxs0NDE5MML0P+0DyB83SfL5QVp/pZMLOpgZ13ch/O0nqw/0047OZvWsqzz3BCLfa8np3TV+QDY01Z314FALHU3d6XKuVcaK+BghlIvlg8+Ul63Gq7K2IZZFmLnhx5nVzHdtzcb52aXL3p+b+7uf71cSAg3SNN6al+1kpMOm2t95Aa2xr37LF670ege4Kt5gqyy5NDgB0DbGbLgeAMPeF6/yi47xFO39pAHgpCqhlGMqRhG1nvHDZIyvGNcOAaRmDiewfgPbAvuzOoYYmW8D8Z1fDZliPowZEMT8qlA9trEJ9z3pqI1AngUQ8sqbbF82QV/aQ9rft7O5RaNV/HVBggVK0kRy9rgZ/TaAiqyVBbU6r3XSGPr5PJknuHSRzG1S5NIGrvf8fGtb8QY1WtHoKqJ50lWaOtOTUqJx1dz8rgpbyCtJ+GDKMUDnsbNqg6NIzunES26yrzAUB7pyTszQ23j/DHlymlYYV/aWsLaSsbE+WSrKwM/uIPsZDxONTx1OlAB0a934aa3vy3ZyF1umxv3fZs0q/YfwGMoyncPITdVPeSaSA276muqad/mp960i/YO+6QmGExLzYc2ORgZDSC4oX0JgLHZ3CG6t2mkrA2JrPFADq2dfkU+9gg7WQIVGHDvgWHIOxg7HEJXivuKsODjkNyAx5DJw6HzFLuhjow71Zxsdp1ly6K9er3ubOSEKUv7WY2x9QB4cunuSD3cGGXNCcMMcoPjT+Ma1m6EbN1gcIPM5sTtax8bnpv04d+1wVqJ3ERtwJJWs46h8HXoVESdI0rbXIXrEZ1jJzoFGSrRZ0WEMk/+AmhaAwKAOZn+GiAcilB9gcwoRP6kb3DXKJX9DUVAx348uBYG4meBrL8Z/W03xcEq0nPa7wkaQlaz3HzxbptnSaLUlAmVB5AknvCbaUNTGSTQSKSZnmoYIJ92ZroM+qnfSzMUyEwAqpWeUvVe8P/rvNYjQuxlHwMqRJnmgKxc7cDUgLb/t0wxA0gzeViy/LKHWlTP5OSpS8oeu+mZ/xZnznBjeVOjVrBC59wVMOKicBs6s1ePLYucBq1gYYEAJxhW8V7VslN57t3UpFsEIDidcBkbE24++bSMiyGk0IltHzo8mrU71vxGYlNzhhYrJkTfqGkRrltnxL8dT88JNTqrz7JT8Fx0iIykWApiawMwMjbzDfTatK+cT0qz5+BaNtp78l4GHDG0/O9vyqy1o5rGVMWWKokGXKyrH/zRrvIDDKjtzJ1f20QVQwUaGSboU585zXmEzH72YU4Q2j0jfTNW3gUDrubUiGtmv4PSLs7HjLk+vWIwYnR6yDuggoSqWbr8BOmf/tgGE75LdbD3k3lixuQixyLBEZtZ2G4aZRlgOcc78sAMajUqjkKgKPxxX38ssFV3S6PwB8roUa0+iyAxJdcUFtG8MCA2mooq10Emw==","layer_level":1},{"id":"6f9f2b0d-609f-462c-aef6-f22b839595c3","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Domain Events","description":"domain-events","prompt":"Develop detailed content for the domain events implementation in bloco-wallet-java. Explain the purpose and structure of DomainEvent as the base interface for all domain events, including its role in decoupling business logic from infrastructure concerns. Detail how DomainEventPublisher uses a ThreadLocal-based subscription model to publish events synchronously within the same transactional context. Illustrate with concrete examples such as WalletCreatedEvent and FundsAddedEvent being emitted from CreateWalletUseCase and AddFundsUseCase respectively. Document the lifecycle of event creation, publication, and handling. Include best practices for defining new domain events, ensuring immutability, and avoiding side effects during publication. Address common issues like event loss due to transaction rollbacks and debugging event flow through logging. Provide guidance on testing domain events using unit tests and verifying event emissions.","parent_id":"77ad1db1-b4fc-45a5-a9fd-f251529bb4b4","order":0,"progress_status":"completed","dependent_files":"src/main/java/dev/bloco/wallet/hub/domain/event/common/DomainEvent.java,src/main/java/dev/bloco/wallet/hub/domain/event/common/DomainEventPublisher.java,src/main/java/dev/bloco/wallet/hub/domain/event/wallet/WalletCreatedEvent.java,src/main/java/dev/bloco/wallet/hub/domain/event/wallet/FundsAddedEvent.java,src/main/java/dev/bloco/wallet/hub/usecase/CreateWalletUseCase.java,src/main/java/dev/bloco/wallet/hub/usecase/AddFundsUseCase.java","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:03:37.603716-03:00","gmt_modified":"2025-09-22T11:36:30.196788-03:00","raw_data":"WikiEncrypted:JLXqlo28VAn5UOPLsLiQgf+Ga0yLp5druwmRLub7GUadt4nf+Lc/QuppGSlmq9DEbgw2TZqD+c2yY8vc/U0k+/EoJFuLLGw2TF+zDZSC2RhpJMPhHCMgqakp2UMFyMFjAx4PwnEzVxZZgAMJ0RNiah5aQzzMXQbmMvaIRQhcEkhvlYl4Za+DfnHON1Ki39zeiJd6h4jjH1zETQzEQf4CIfcjHmXjVp60J6gpb4YYzgknDkimYZOJvbZJdGqKUsZ1nhwv3sZCk8P0Y+783Y0rlLIPubcRY8GRhKlLhfy533apAuyJvCaDVMHO09fT4MZ2/rPVS1m5u1efW5e/7sAHXlkif79tbWIfF8zCQm9FbU+6x+7nikVVPM3iXuJNIGAN0rU0LYAePcND/IUcmZIvn1NFhvYKcKjGcQWR9K255j30+38GJroiuyc4G7hrStTrgeSDAr8DEoL9/j4mq4Uk+BKcN8nBbyd1hc02kmA5ojO2RjTpObIjxHlj8EaTHT0pHSckSRni4mIBM5R/LVrZHCmCQefiuwMqNx7WzIuVT1PC0rybxJYssZ0UarqJgxkTNrbp/avHG/BXJ06W4mWtXgN4r2yupeiaxOqbsYf6/qiz9C0tOenhaNVTT710iSlmezhhckoviEzgYHxtXQqpuDT3twM4syrjqvE5Q++QsxV0WzJ50nV6pinPHFqsQ/5Ak1wovrCBY6RqSf6RQUIS4XuZJtvAXHagEt+8KJ+IwSd6A+YR+PjaX9Ve17WUyNmuwcB8Mi+bpyh/1ujZHSc5mpw6G9s7foibfyp1fHXI0HdItzxfxyHBY1F6VsE/IJAuvtnDKpN5NGHJDtd4LX7OJXAfwu7JskTxRM0a8dPbpXoeCFcbfp2CxLHs3jpnT2/cNwnSoJtAjmqZg+/T1MfPHxl/G8fxwfmIF/KtHC7ZwWuMIcpyUgPVm5KfxA4AKCHOEi0EENOi6bRjIfQnmTBov8uAw+cYHmLQfPH1JwZSIssE+dJXcv8zyCzsay+BufXr6F4+G06CfK84SgFETcH7flxXbfL3OJD7WQZKsF6JG92knNE3VbyCrok6YelwGLGWkhqwuKAtc+RXni4YG16pV/lPEZOYAM1bUv53E8yNa9q1aJ1P0RZj9HU96Zom/nfvgcdIbk4KIU5ltvIKl0mpHYA44rDzGV+uwalTMcLXvfRlN4xyolsRQJHCdcCjrggXTVM56h+2AkB95lzhClwW4xXDrmy6aoFaeklhuyRLfvVIQRk7Q+WUw7rudpXVW+UZephpvmNKGXti1aSsxUA0scEJtRvtqWPOTftjAQJ3/Idq/HNFvJBgjqAfRVwavwvk1YEPlEza7Y2P7ST6QH5IMJzDzJjr3yOAbmfmhFoMka2yG05J+oaokAH9sz6XCqS8ztNGW3idDmvkDcEWcx0Wkym28zVGI0Z+c2h1Kj+mEhTBBkbYgrZV0P4pgA2qgGIhPBA7rtOwvb0d30mFxPnd1ph+ivU5G1VwU8z8dqStLVdZyRQ6IVFI7BGDFhwSzDwSLMIUWG7KUSQXwtF256Xc/k8rPzBBmmHPlKslarLcFDVvK2YNSCeOla66mAAzRN0EzK50V8qwMbt/iC451/qMTuj7+UVsQtUCZQ1PCC2X5zPLHbggXflt9E6WuRnbP8HI2muNZS1e1OJz5FLBmcfS/nDymQf42JndeyJB1bvz/fFqSyRghOVqOJ4c6XpLDpqn4Rmo9x93NDUVDIE99uKhcPfeyZxL5vbdYiot5Wmz2Gsrork1VQ1OqGwDltoz+jAiN8aho6dn+lIem8AuwSlpyfpxbQUqLCxASm84hQ7kO7lkkLbhcs2Guqg4utW/mskjiJCJBXj4Gn0GnAnrh2rPNRQdeLoXbMVoYCCO2b6sxprlrOFRsMNZVYqxKORyw44i/ZmoTID26cCnquLK9NQMTZminwI3xl4IEyfoWQF6bqd8Z4U9b1xh6KLMFuRHeqi5L0K8niDYf5g/DFOpQcUeM+QzyGJ+lyxe03NvfYemgIE+MRStX+K3/RJVXqQMCLrPRKODEnLoYIcqNbCwfg1xO1ZT8af+tHfSL57HndWvZQwe6iiAVqiugngj5L0Tm9PXKOBFLwkbcIzXbFzfnkg6NTCVrSPavWgMen3u0zmnjMVYvaEi+/nNSfteJEydKbev","layer_level":1},{"id":"7bad130e-71aa-4c9f-88ae-6b81606e5bee","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Outbox Implementation","description":"outbox-implementation","prompt":"Create architectural documentation for the Outbox pattern implementation in bloco-wallet-java. Detail the OutboxEvent entity structure, including its fields (id, eventType, payload, correlationId, createdAt, sent) and JPA annotations that map it to the 'outbox' database table. Explain how OutboxService provides transactional methods to save new events and mark them as sent, ensuring atomicity between business data and message persistence. Describe how OutboxEventPublisher implements the DomainEventPublisher interface to serialize domain events into JSON and persist them in the outbox table within the same database transaction. Illustrate the workflow from domain event publication to Kafka message production via the outbox worker. Include code examples showing event serialization with ObjectMapper and error handling for JSON processing exceptions. Discuss database indexing strategies for the 'sent' column, performance considerations for polling unsent events, and recovery mechanisms in case of service failure. Address best practices for payload size, event schema evolution, and monitoring outbox queue depth.","parent_id":"2da89f45-176c-4d2a-b811-7e4e6819d35d","order":0,"progress_status":"completed","dependent_files":"src/main/java/dev/bloco/wallet/hub/infra/provider/data/OutboxEvent.java,src/main/java/dev/bloco/wallet/hub/infra/provider/data/OutboxService.java,src/main/java/dev/bloco/wallet/hub/infra/adapter/event/OutboxEventPublisher.java","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:04:37.880043-03:00","gmt_modified":"2025-09-22T11:40:39.916705-03:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"691fd8f4-84d5-457c-80a8-984bc28ae544","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Technology Stack \u0026 Dependencies","description":"technology-stack","prompt":"Create comprehensive content for this section focused on the technology stack of bloco-wallet-java. Detail the use of Java 25, Spring Boot 3.5.5 with WebFlux, Spring Data (JPA, R2DBC, MongoDB, Redis), Spring Cloud Stream for Kafka, Spring StateMachine for sagas, and Apache Camel for integration. Explain the role of MapStruct for mapping, Lombok for reducing boilerplate, Micrometer for observability, and CloudEvents for standardized event formatting. Document build tooling via Maven (pom.xml) and the Maven wrapper (mvnw.cmd), including plugin configurations for compilation, testing, and packaging. Describe infrastructure provisioning using Docker Compose (compose.yaml) for MongoDB, Postgres, and Redis. Cover toolchain management via mise.toml for GraalVM native image support. Include version compatibility, dependency management strategies, and rationale behind each framework choice. Provide examples from pom.xml showing key dependencies and plugins. Address how these technologies support scalability, reliability, and maintainability.","parent_id":"","order":1,"progress_status":"completed","dependent_files":"pom.xml,README.md,mise.toml","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:01:21.887822-03:00","gmt_modified":"2025-09-22T11:07:14.892081-03:00","raw_data":"WikiEncrypted:w0CkdCdnXCcvlN5xOpiEhEX3U68GI0Ngj6azFMJo9xSXD5adKnu6Qo1t8CLnFs+ZY0/59wSk5TSFXlSmTJZmrpXVgL8t85CsMGODU6uqFrSJLCPNgltKTK127ePse/sjnAno182XAaHP5K9cRAJGUkyLDMSJweZNG5MRQxn6bs8TwqfL45rcZD/oQcOoOPBWMLoSFDXMN3s7kTVUtV8Ed05Z6UrSot6IRhH1nzXNe6kXkIZ5NZRBbFVgoYZwRpUq1Ivv/YxZQHBmqKxmbxCVvOAj2WcDgTH6AeC7kBo+zdE2bd/xfBjc6DcWO+m8Ln9uv3Jtx2LAjI/HTv6srolb+vIX7hXrhOfXsMJfuiwF7KZaOQOTV0hnytmkN7M+rqhRyflQfpaIVmlyelAh5hp3CB2tLg4l6w9YuJ9L19J5QPy8ftXqJscPkHHWSxN3Krq4s6iXvusS+7OoA2Q9lxBx9S76mA86gXIZrckgYVJCamcOJouc/fAHkrwt8FqlPxuz5wwqB/LXS5glPYZGYJfUq1BRmUMHuiIE3bx4zvJQBxLZYZpINKrnLI2+inHa6pib6i89Oqs0J5n3EXlEawOE3H9qWoei5btPZW38h9XO7Zf5OXvIw33tYsd2Fdc28vk1K3fuSWWlVCjU9s+wxQgSAERZtWdGlmFEPCei/1TmA74mfkmZewuhNmaHPgnlQsEunggCyl+VGDA+ULe+0HL23IlMryJDADq8c1G65Bjei1/0WHrPIDtwfKgyJnGEeyI0MUKHYrnlSlv4bQCz6nlBtVhv9/uuBPRX0hAxdHOeUoKfyqZwLChrJ2sTQZsc/os8dZ6yZmQUjllRj3wLkm+FYpoHQYX46G89necd3SFUxC9KPL7dReGA4Dc3FWrf12DioSb3NmsCx1GZ63EqTGOtViurGaSwqYjp2zZLMTMkww5vK9pisoqWPYEGqaCG7dy1HtJIAWH6ghwA/FQO7aGHGjDU538cgJKBWL0mBZBBNlLXCfsgixSytMt3W4BiqYR7epTDqSOaTd9vAfdaV2aqkBaleBXW7jXe5REKdr0P9ssQvxlNBEaW20o35lx01K8nU/BDYprsLOFa9+mu2KsPW+juy0Vyx0Am4stTGR4+ZPdi9Pk9E5VUSttMqsQPso1jTKq5Eicy1w0ugSD0p6Glm5kdf+6ZlZaZ81nd+fFfjjAJCnfnlf2TzIEF3evaE3Qtqvxn6kXzzhyxejoK+aI7pdiNFlolZ6hYBawOP6hwIUpfG7Xebghd5JDIh/bWQxa53cAuYzAnzREPLL+lX9cl9gqNtgyU8lufqITX6CLTveCMMCPVB1qrMPOLMPzvzcQL+/vvj3+6chI0E7FxckEqFjYoEiyro7Mxnv1gz5pJ01Z+KENkkVtKfepk5G0YozOtEuJAfIsusECOvPF1MjR0Dmbp5xF/hHZ9B0jqagqfX1oOHhDXisUwnKAimNF0j8+Ng+r9j9M1xY2VON/DyOvoSvGhlYdDxx5vr7Ih21YgIJ+dI6eKkFBSAkRWK2UbBtHxqaNgX/CBPWJ0hnIa1FAtcbabwMRK66M5S0MSnYN/y5Uc/XqRVGUVNn1Aa+SvNFH2+j9cF/0D3l+n+9z1kjtDlalbHCcD97dbCIGNYQiqZtXmB2UHrCRSU7p4aniqGW+C0HIcHtUeCGixSJFa2D1ahD6y3T4V77w6+zc+nGHeP4Bu5gXQEMzilYey9gHV5HYu4zDs+W070hqvehtpxS1QlnL1tLGz4nBf5h74/uWh6Jet6vU1D+g01Gxw4+yeK8ysYlL2auW+MdGIK7h0GWazq/vz7YWpelCPGgdu1L+syJc=","layer_level":0},{"id":"4cc23b3f-4f13-4134-969d-a779d8ac51d1","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Transaction","description":"transaction-model","prompt":"Create comprehensive data model documentation for the Transaction entity in bloco-wallet-java. Detail all fields: id, networkId, hash, fromAddress, toAddress, value, gasPrice, gasLimit, gasUsed, data, timestamp, blockNumber, blockHash, and status. Explain the use of TransactionHash as a value object with validation. Document the status lifecycle (PENDING, CONFIRMED, FAILED) and transition methods: confirm(), fail(), and setGasInfo(). Describe the static factory method `create()` that emits TransactionCreatedEvent and `rehydrate()` for persistence reconstruction. Explain business rules around transaction confirmation and failure, including domain event emissions. Illustrate relationships with Network, Wallet, and Token. Provide examples of transaction lifecycle management, validation logic, and integration with use cases like ConfirmTransactionUseCase. Include error conditions and state transition guards.","parent_id":"60954f52-83b0-4982-8f6a-e7d2faa3c179","order":1,"progress_status":"completed","dependent_files":"src/main/java/dev/bloco/wallet/hub/domain/model/transaction/Transaction.java,src/main/java/dev/bloco/wallet/hub/domain/model/transaction/TransactionHash.java,src/main/java/dev/bloco/wallet/hub/domain/model/transaction/TransactionStatus.java,src/main/java/dev/bloco/wallet/hub/domain/model/common/AggregateRoot.java","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:02:32.727152-03:00","gmt_modified":"2025-09-22T11:41:23.216993-03:00","raw_data":"WikiEncrypted:pze/wTPA8hT9dADtWGlHVWWEK9R8c8qCMT99OL21uFi5r5leAzRuNFAlp9VOB9ckk0w9vCsHOh8iLdCOIETAt+QJhmQoEJXpiCmkOaWBhy//iHI2SdVJlYbxEo58YzQ6is2pqqS0/BXZuLsY/s0SfffnfKxJUQ9O5rri9L0Tk2EwWYArKLIQupWLkD7YzaCM7TKHtEJkpnuL8GoUqqLmsuwrUts6hnlKbZD2uP2GPJvFhN9JD4rftvftU3Ugct3IbCOajNGy/8HysdW6nhTH4+Zq+Tah2zqL9dyJd6asFgDVksdjomcGDoq3/mld3Iigw9ti/oO7EHMDoPB5Nu9UCmv5EkQYPxJjc7MX0P3Wlz4n0oFJCnimGWHCMYGjM5iaIh0Glt95qrv6nZ43lEyGeL97w9Et7tUtKnfwcIu8h9AsLsfPNeJkGDIzzviiG0Y7r/miGvfxSO1tPpMdUUtb3GPRDw11VpqmmcYAm1DDlXQ8Dy8bViFfR4kK+PQixTtYRjCuAGlAA2DCxNVgNoa34U+SWfn29VVojR2pxzhx6C5BgSuqaxHEx/z8Xah+6jCbp+43gVf9x1vTEm1DWYXM2U+rZtd/meVUpcOvI7f2XGjaSGTOdoV3raR/pR2lDomaF5e9t/LyQidmTkisjE+6hLxr4DV/yCGoFzK6uuMsSwc9kXQ2Nd/OLKvOijJVac8Yl53W0+6XdnsKK24rjwuVEr6s0PEYFd7SYKfujSWMs7C3LANjv7X4z464I9y/cP2ltklaL75i2ihe364bnmoK6IkTtnESZS/NsCR1rgYiWlHCSDsknKinZergVIwfq9UFTsitryGQvVDvG6Osn8s2iwFXuIp23eDjgNOhU7/g1bML0a8kI0rVAUwi7qsUHhi6uSq/ez1lREDhnGqvuFRI9u+1QNrD1hiIP43GlZPYiwPq5SK+vIfCL2BHhX1b3e47jK24AcFH0a276H8eGuxPCYV9jf/u3Q4/MlxB/VMSHEh6Zcffp8Mg7i2vWfOL12bz6w/Q/4CotbQdULGwMj0TYa5h+r52EO/inYD+EiEPk3xMy0qWkaN313OPhBBj9SNimf+F+63BAMNHSyWRMyUAj42rVjQuWKALCZmzZHz+twXqwZoujOHEKaN8FSOOVzew1O5pwbYDLE12Guz+C1GKO6JFRFwMSvVzx6Mf7qSjNiX6XT6R5lu1a8Qxh/eiwGlWdKmvWVI2pt9dcR3v7B6/73ja6fOnZg5Lh0GsJ8br4sE8kjGjP7Lb+ysNMXU9FN6nRLS0Se6foB2c07Gf6MN2LpRhEVBSJrNXj+N81QLS9w+lpaKLY6VDvyp74Mf36c98wuQSqUqgn7bJgTox5czrpJ5+vQCKs1c2X+Kh22phzJeQbNdEYljbFyxpKA76j5OCP4hVv/J8ezBjTHUoEhZ+ydfdl84d6QHRpx5zbnmKeYbkDJSJnslqkrC+hoR4PIOHMEfkropCqRAJka/gaxSJVwdb9cG/1B0NBn2aJW3l2i6yU3YG60jwJCa9UZL4ztVBeqSzj1U/w6pKab2JJHleRlrQIIx7G6EG2R7gBUJ114EnlmAkH2l2huTCYDqzWkJX9xyLFKdnebAx+etrDm7ToKKa6MHfJ+VACurMAAiZH6cNgKHBWsE17CYRimK+DuMxx2xRSH2Wdf23D6vYUj7oWClIJOgNqtB83POvCYzU+acJPPaqfOHABOGEHRrKXyGTpmyTEFP1fCgxX+iKnnrhRqiN9PPwcZOA2Z2DdIQCfkyCPOl1SZvBj6SsQSz9q+Ku12ZaOHi0kqM3W617SUNcU6sXkc3CBkn4n8+iGLXMZts/NscnDxj3IkEUmyIAQwabgHUNCm//HSnZo4BJjcEaZ+QHKmUdWlsx8N7DNY4zEL+FdyRuxGBff6Kol3Vc9xAskdH9/AL34fYhLwAOgAYqLQ83X/B1E8deEZQY2dTyEbk=","layer_level":1},{"id":"59cc8e02-7927-4ce0-9981-2a64ffe73f96","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Add Funds","description":"add-funds","prompt":"Develop detailed content for the AddFundsUseCase in bloco-wallet-java. Explain how this use case handles the business logic for increasing a wallet's balance, including validation of wallet status, amount positivity, and token type consistency. Document the step-by-step flow: retrieving the wallet, updating balance, persisting changes via WalletRepository, and emitting FundsAddedEvent. Show how CloudEventUtils formats the event for Kafka via OutboxEventPublisher and KafkaEventProducer. Include code snippets demonstrating transactional integrity, exception handling for invalid states (e.g., frozen wallets), and idempotency checks using transaction IDs. Illustrate integration with FundsAddedEventConsumer for downstream processing. Address potential race conditions during concurrent deposits and mitigation via database locking or optimistic concurrency. Provide a real-world usage example from test cases showing event payload structure and state transitions.","parent_id":"4053af3f-6536-4d0f-b41e-6f8cc3eac024","order":1,"progress_status":"completed","dependent_files":"src/main/java/dev/bloco/wallet/hub/usecase/AddFundsUseCase.java,src/main/java/dev/bloco/wallet/hub/domain/event/wallet/FundsAddedEvent.java,src/main/java/dev/bloco/wallet/hub/domain/model/Wallet.java,src/test/java/dev/bloco/wallet/hub/usecase/AddFundsUseCaseTest.java","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:02:36.464724-03:00","gmt_modified":"2025-09-22T11:45:31.015366-03:00","raw_data":"WikiEncrypted:+D8WwFjLO/jc+vrzf6cR0Jyyx/Yvr4KRm23rJ00coHOFKfjLQ6nAgiy+hf3B1cwEze9x4LmdmULwFdKqjYomJ41cW465DwYOD/5IFh92jVFcUF/9/Wo6+tfk1F0yjmFroURwhu8BpKbiQQJaIbL1atRQpT2qD0XpqnO7naaIcwxaVZu7svS4p7qOPnCVI5iKY3Sg7NBDuSiukQQ97jSiw1xJojwBST/D8/NH6V3iPBnW1iIk2zZjnWt+IkbJOmIoP1SluKkmgmtAKm1bIwNzl5VKRjpApx4Uer4v2uLdxSsLoa3wyF2uLdHLRVsL8dPC/W/eSMtE6FQTlBDBTOSZFtJAuHKQ6i36W9UdNNuQ30HVZxv4aeDSEohb10lTNW2Z2o2mkKX4Mf0wwhSff4JZ7BLi7On+IoiIfqh6sHQts1TWW5OG46ZxS8MdJuysBK5F+boz4lPBhNLsyOB18KnkMYU/tIxzlhEDcYIsnF71elnpgrIkTAsFEI3m6NlKt9jKgRO2nRf3qgvQLaxWCSJzCvS4hOWaAz1gxnUTSf6NCUqIHCnAq7JTZRRxhHfRfOcwtfmTFjRWD7OjlG77FKueTercF2P9q34bLEOeAMH5p685sEurwyUREyP1ulBw3NyU918ujcDXLBQGDB3ZNTKaBDzQxsILbanWmxwGDTIV54qjU09rpojEa9p0LnZFoWPi/1NQO1HlWieeNJCzLRWBeQmP+QaOZ/19gfFKYC9adMOLITQj2fynYowj0l5Or108rns6HjFOQSrx3I7WDhxTD64q1vSKUT5RtQ0WZQ5yeGKKYgW0+lu2HUoebwM5LrgmwioXe7C4sheKgJUC90Za9pLugWVLshF4Jrnu+IN/JTapkoff83Zq1+Q0ZiBbP7mxRmQ3+X1uPLcRNxY8QrlG7VE9aCNKnpCWi8D81aqmLAtPDh4tcxvCJ3e0g6WLQxK1trxenp/xGdkY04wGoSFmw0FLyehU6kd8kv9L7naZTGL2RvCwe2JLZmxQKEgQyptNTfY+Ion3XHiT88pt1qvPa/R6e2M3a4Z3MKIe0ROwsLNNgAzfQp6rbBKQFTNt5gXtRHKBCv6AwAv1xMZwO20g2luuCPrXuiT4X5TXdgrsBZDL2xeSyzwhVkAcocquurRN/beahiyzYoJBkRsRl7UStApDylcKb8v6Kb0drrbsmKR1sV+jzo4C8CNjooQx3tjEsSCLLljOhS3/M0uFRI/w8zIXmVIagwwsqqb827wW5TwVUymE4oe8JRQfezYqy/k7HMsVjjZxmSQq3S83p6STx8gmcIZdEZuMWCBGqB69IiLPTUPnDtvbsbSH5YX/cSRbhMBOdiCeTT9zkmezopKjS7qCyP8nTlpmmBNHW5ksdL85kVSQk+KTkv3s+DghaD/Rf7jCJkkQ1cs/jhQBnfz0m6HLshwzy/suX5Zhw69+9Iummkl0pJ/l6VexOvu02pj0CMBTMZLg9vCl65CpYH1wERbHdYt2zTwrw5P331aqk3SxchML2xYeUgmK5uP2oAzFglav468H8pAQdk1VnRLE4yQH0X2DtzQT0LGx3/3KWIbwIcnbBS+CsvajfmaUdIqNYjr+AXm5Nvc4nOVodd6rpYh++fJGUjdc7Wt+tkLTt+QGx5SBnk7WH5ohVf6rIJ4hnXCRraD2HLQGc2F5IAYPS2xYKoRJQ0vPvqglxocoGBAISDmYy+3sVGgymETTzVg0Wr3kQvqGx6NWn/KoP6XBWjb7vrJtKuu0kG2r5bl1rRMvLjEVCRo87stfyVwNHukcEbZxfqFZmfFKvEGnJLDdIDrT89t2zcKpLdU51Gpq5xnHuQRDsWSrxg2h+P3JNOJ4j3WDJX72vJN7YkjLn1B5evIJ4IhLyPgQJfB4n4H2pQkShTehkQFDQuloVN/ttDKpV78EaXl7Sl4YOfGiVjFaYvw5eG3xe0D8/acaAQLnIgQ=","layer_level":1},{"id":"a45f0016-162d-469c-9242-554e2fd51cf7","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Repository Pattern Implementation","description":"repository-pattern","prompt":"Develop detailed content for the repository pattern implementation in bloco-wallet-java. Thoroughly explain the separation between domain gateways (e.g., WalletRepository interface) and infrastructure-specific implementations (e.g., JpaWalletRepository). Document the role of Spring Data JPA repositories (e.g., SpringDataWalletRepository) as thin wrappers over JPA operations. Include concrete examples from the codebase showing how domain models are mapped to entities using WalletMapper during save, findById, and update operations. Explain dependency injection via constructor injection in JpaWalletRepository. Discuss design decisions such as returning Optional\u003cWallet\u003e for findById and filtering logic in findByName. Address transaction management, exception handling, and performance implications of query methods. Provide guidance on extending the repository interface for new query operations.","parent_id":"2623109a-022d-4570-aa53-eb5b4cc4249e","order":1,"progress_status":"completed","dependent_files":"src/main/java/dev/bloco/wallet/hub/domain/gateway/WalletRepository.java,src/main/java/dev/bloco/wallet/hub/infra/provider/data/repository/JpaWalletRepository.java,src/main/java/dev/bloco/wallet/hub/infra/provider/data/repository/SpringDataWalletRepository.java","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:03:29.473885-03:00","gmt_modified":"2025-09-22T11:52:23.513716-03:00","raw_data":"WikiEncrypted:iK+EVtJORL4i9RpuJMg4EBAiaABaS65OLZlB6QvLxWOXSRWQz39bndUxnZsmrk2q7amnQf1jeapNMw4+zMFEze16pGlI94z10PW6NKi0y/8zXdChR8dbqBj9V56+OahWlcwlFaLORf2tCFvuQah1aw4/n5MP2+/2V6tSOOXUZ/HV0kLIFXh4dk1PWUXyF7E9PNODaNMmNpXboamL5Y1rUEzU96tp2bCqNGcUSPmUQ0NyNe8Xx2QbhZIcUzOXmB8lHH7H7mKZLDeMT0EGjaVs4/6WC8+az4OvkCQflQx6T2Ugqr6p0vyTxZTwS7gsHv3ao4mm9ykWUZ8pBlhgt5UAKvRTkYsigZ8FrDGjqKljBtRRl5dt0lB6th02seyrfjIVeAMxZTmyvvIBI4E9xLL1JFUJlMcLRIJvdBLPAlK7i8nycDa1xeva7luLPKJYkNSJv+JZmDvWCTcJ/zgWEc/SqISOv56gfu6cURjnKXGdtqB3160yC/35YXxkWpeD7tlyCk3lIokmL1KBnlBtSNCm2nU3F0mWjIIhiwSS6gLXM1mDgednpIm7yRQlxfiu3TEfnpwykAwzw28MHqB7hwT6pA3EnDc/TEtJ1caou+2ArQAblEjp7i53B+HTME0qNmRnvz8+Slzy0aPmrNWMfBnERql9ua5e9pwn5pYF2GX4B3Gp/j2pbwkLfGsGNMdZk1N2PhnvUoFL0+6Wq70KANxaHGQ8I/mjlUh5aEMM95ygsEt1MPk+yN6jkcGtshpDDQ/abhPA4D3Umq5Xh6OqZlEYAvCIBIRzZHCo5o2DuOXz2E/Eanhc8SO/5zmPvG8pgi2CvGJuOC52XJrH/dDZrZlCRtfZmkVe8hnlwG33mUOOFwh5tpKpexBXFC1Sk4iRVFptx9aLU93mF9B0I703o7cQnxG4qFw3r0t2G5b9aZRxGHSH9c7x5y4mIEltSTzBqWXNRMDlVCrncyDwgT3/4Ht82Pou2JiOhI1Ns5p6axTnQ7npbk6+SLEQtCqXB0aogV2nanyU5+FW5kYFWZ5RJgMr/5KqsCmPvT01vonQmRAAUkTKQtClljqLLjn2F4bKFm7y7STLP6UqnCu2g0XV2w/t9UOLEMgKJm1tuBhENiJ98UgHyh+wLpYuZl0lfZuQpZtH82E2MyDYXijQs1TuSN39Cvjtw+PcrG1GITY5yQRsJ1M+4ev0L3Kv+kdft1+n0DzGv0+GeHQjd0cFAhss4rCsm+exUyteYenNUU+Er84758oETUW8ebMDqnsFC+n0LCBM83AFLFiwzVRW5H/uDEHVtBGSV8D6nf3lHdGgxz2QlBQq+n5iSH4xMfCSXVWIvAnx1KGixBq/x7OxUwusoC8qf9fWqMU135SCqp313+CV0dHWZoGocK1rhsc351WOXR6JtW6i/ngncHvu9jc9aKhxA/hJN1QkeeDtlXVvFNfbTkoOqzcDX/EbqJpwGZ/Slal2uVq49PjZIKS8OuWH+3582DvGN41mYKcgN9H1hRvlZ+A1o+yBCr8sUbIH9cX3OQ5ZvzmXNkuJ6KFAmfFYCmoDgfT8pkOf+3VxBKa0R048mVQnjkhmeo5AZa7J/6cKubVhN4J2x3z+pO9W6UKFNlwi4guBk1htyLGtQRjD9W777IfW6JqCANUKukL8yWzvA3zERZIX5xjYJYeciK0xv5oj41Y8fQeGbonHxGd/QV+s5lJWzGkOq2Jk9Dx/MtRvf6dZ00SsPIgmh5YxAn6RL75blD2cSzhJek6HP4yZmZgWNcKz7rYAopI1xDeAGXZsy8F2ZwQ/ISlGwzIrZ00vTdGXGFztRQ6N9XVVN3qgc50FPrsD5ndnmhqj2zyQYEIptlrrN/E1OdJkN2tXPQF0IQU9BrjPxW8sdNF+SXMYYRLAHNNFqQcO47U7EBDaDGmhC673","layer_level":1},{"id":"43452d36-a0c8-4387-8a1e-f95c8fa35aa7","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Kafka Integration","description":"kafka-integration","prompt":"Create architectural documentation for Kafka integration in bloco-wallet-java. Describe how Spring Cloud Stream's StreamBridge is used within KafkaEventProducer to decouple event production from Kafka configuration. Explain the role of EventProducer interface as a port in the clean architecture, implemented by KafkaEventProducer. Detail the process of serializing domain events into JSON using Jackson's ObjectMapper and sending them via named output bindings (e.g., 'walletCreatedEventProducer-out-0'). Document the use of CloudEventUtils to standardize event metadata (ID, type, source, correlation ID) for interoperability. Include configuration details from application.yml such as binder settings, topic names, and consumer groups. Discuss delivery semantics, message key strategies, partitioning, and error handling in Kafka producers. Provide examples of how different event types map to specific Kafka topics. Address performance considerations like batching, compression, and serialization overhead. Include troubleshooting tips for common Kafka connectivity issues and monitoring producer metrics via Micrometer.","parent_id":"77ad1db1-b4fc-45a5-a9fd-f251529bb4b4","order":1,"progress_status":"completed","dependent_files":"src/main/java/dev/bloco/wallet/hub/infra/adapter/event/producer/KafkaEventProducer.java,src/main/java/dev/bloco/wallet/hub/infra/adapter/event/producer/EventProducer.java,src/main/resources/application.yml,pom.xml,src/main/java/dev/bloco/wallet/hub/infra/util/CloudEventUtils.java","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:03:37.60597-03:00","gmt_modified":"2025-09-22T11:48:19.928192-03:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"b71349e4-f46b-4956-a850-e153cc0a9d1d","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"State Machine Configuration","description":"state-machine-configuration","prompt":"Create architectural documentation for the Saga State Machine configuration in bloco-wallet-java. Explain how SagaStateMachineConfig uses Spring StateMachine to define a workflow with states (INITIAL, WALLET_CREATED, FUNDS_ADDED, etc.) and events (WALLET_CREATED, FUNDS_ADDED, SAGA_FAILED, etc.). Compare the base SagaStateMachineConfig with StandardSagaStateMachineConfig, highlighting how the latter provides more granular failure transitions from each state to FAILED. Detail the state transition rules, including external transitions triggered by domain events, and explain how the machine ensures proper saga progression. Describe the configuration of machine ID 'sagaStateMachine' and persistence via JpaPersistingStateMachineInterceptor using StateMachineRepository. Explain how the state machine maintains consistency across distributed operations and recovers from failures by restoring state from the database. Include examples of state transition flows during successful fund transfers versus failed transactions. Discuss monitoring state machine instances, handling timeouts, and debugging stuck sagas. Provide guidance on extending the state model for new use cases and versioning state machine configurations.","parent_id":"2da89f45-176c-4d2a-b811-7e4e6819d35d","order":1,"progress_status":"completed","dependent_files":"src/main/java/dev/bloco/wallet/hub/infra/provider/data/config/SagaStateMachineConfig.java,src/main/java/dev/bloco/wallet/hub/infra/provider/data/config/StandardSagaStateMachineConfig.java,src/main/java/dev/bloco/wallet/hub/infra/provider/data/config/SagaStates.java,src/main/java/dev/bloco/wallet/hub/infra/provider/data/config/SagaEvents.java,src/main/java/dev/bloco/wallet/hub/infra/provider/data/repository/StateMachineRepository.java","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:04:37.884027-03:00","gmt_modified":"2025-09-22T11:53:34.407832-03:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"60954f52-83b0-4982-8f6a-e7d2faa3c179","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Domain Model \u0026 Data Structures","description":"domain-model","prompt":"Create comprehensive data model documentation for the core domain entities in bloco-wallet-java. Detail each model—Wallet, Transaction, User, Token, Vault—including field definitions, data types, relationships, and business rules. Explain inheritance from Entity and AggregateRoot, and the use of value objects like TransactionHash and PublicKey. Document status enums (WalletStatus, TransactionStatus, etc.) and their lifecycle transitions. Illustrate entity relationships with UML or ER diagrams, showing aggregations and associations. Include sample JSON representations and persistence considerations. Explain validation logic, immutability patterns, and encapsulation principles applied. Reference actual implementations in the domain/model package and show how they interact with gateways and use cases. Discuss design decisions around domain encapsulation and separation from infrastructure concerns.","parent_id":"","order":2,"progress_status":"completed","dependent_files":"src/main/java/dev/bloco/wallet/hub/domain/model/Wallet.java,src/main/java/dev/bloco/wallet/hub/domain/model/transaction/Transaction.java,src/main/java/dev/bloco/wallet/hub/domain/model/user/User.java,src/main/java/dev/bloco/wallet/hub/domain/model/token/Token.java,src/main/java/dev/bloco/wallet/hub/domain/model/vault/Vault.java,src/main/java/dev/bloco/wallet/hub/domain/model/common/Entity.java,src/main/java/dev/bloco/wallet/hub/domain/model/common/AggregateRoot.java","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:01:21.889279-03:00","gmt_modified":"2025-09-22T11:11:24.844058-03:00","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"8701abd9-8026-4832-bae1-d92d8c51e531","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"User","description":"user-model","prompt":"Create comprehensive data model documentation for the User entity in bloco-wallet-java. Detail fields: id, name, and email. Explain the constructor-based initialization with UUID generation and immutability. Document the entity's role as a reference point for wallet ownership and transaction auditing. Describe its lightweight design and lack of domain events, focusing on identity management. Illustrate relationships with Wallet and Transaction entities. Provide usage examples showing User instantiation and integration with wallet creation workflows. Explain data validation expectations (name, email format) and potential extension points for authentication integration. Discuss privacy considerations and data retention policies related to user information.","parent_id":"60954f52-83b0-4982-8f6a-e7d2faa3c179","order":2,"progress_status":"completed","dependent_files":"src/main/java/dev/bloco/wallet/hub/domain/model/user/User.java","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:02:32.745561-03:00","gmt_modified":"2025-09-22T11:54:33.980128-03:00","raw_data":"WikiEncrypted:piKNT601qxwAxFbFc+bbN3PdKw8MMByUrHSqD5R3EjueX1RnX7eDhqnI7srVFpfNqBnKa1V68HUZAHf/EaAQtAY4vxwMq6mM8DqI2PRRRZ92O3UQ4PEkUsTUcu5+Kf3g/AWk9bM77jLRniu/mi+GHLk0MHQbQQbCkmd4bf6gaCPTx4ZiVz3X5iTWmiwXOI/m5Voe2+iMuIXhP3PxTvF6MFUWBOZc28sSNL8P8teI1vKlRl6l/x+ZhLP6+JluRSsejDLj2guL4DU+E/Q31rCsMVbPnxo57pQ5BUSctsXsYxTgc0YlWfoQPVYDE0GK1Hn+xqHRqMm/bSQTpPKIUhrYkHrF6eYuI32jYTO6tYgsPuno2LEo3Q9lK/CgtzYE9dUZcIckUXWIXdJNYykn89vk/SrNrRjWiVwv4ZGfQ3ZVLl707jSjcVhUekw68UMIymT3he2bExGGFj7o5P6yoK5XXa4O6lDK6e0A605inTMteX2LZoDo1ldXC0ygzox5nnHm036EeJkdqEvRkAst3mKH2yjgsEWSaSUnYXWXz7qyeXQ6Yg5FFyWiS0x+v/fZtrs2lzUxRQeT4RotCc4rcMi7u2KEdkPSelViPvtEzG1wPk4OJcpjCh9O03uD7NGU2R3HWIxSmvegyIzavFdtOI/o2/Bz0nKJ58z0cXzg273NzwOVuZ4Edi/kNXVAZAYtbKAlp++k9rdByBqrZkPswwV0ZvYn9pAwtMQOEq3r35mNXCyGvkQRVFVdNV2Z4xxlPEFO6ZjQBqynAzJgFchbAY+CL7zXIVYr3bd6iU9RTtHgAbULDh6RDpB9cdiSrIk4D4iqmhkeu6NL20ncj1f3lYJeCw0bZ4pk/z4MwUPzh0EjOUW0pDdEVNRwEXbA6gAepdptKGOT5Ra7clRTVoBZzIL4KcNG15FDiB6OebkyC2owK6gN6DeXyQ5Gfb2+2WS6h9teddy4bbl09vse+9a6CcFGFi152WUMylUkQn7r12QHwq4+vCPTVnORirDyQa7H8Rko6N3HaAO6eQxphPxvU4TzQusuWjEq5CGtTQcpTkai3QSbXxwnyEN6cGP7klkUJWLU8rVY7ro+YVGzcq0mZNPbLUKwK/i30ne4gTG2R9fBOPiedwu/UURwt/cFaVjE+HCTWAvQbxGXRJmH2ED+becRICl9Tfln7bIPiW4rl11yTPQdthsNXm2RQGzD4iSBgp28Js+xx0mxYgz/qVVFTnb6SLdvcYE9sBAhQeKp07XDm1ajKrPlvGUv71GZGjduK2vtUg0geFwxzw7HBE7DhCls/xWzAEFvUu4FwFsYxz8clMVDXilwtfsouN6xolh20ujtjaHXLoeStDvoYxBJ/VkMd4NeQi1r+ddoGFJvZyxkzO8H3VzEtOw9fw8//x/jDtFd","layer_level":1},{"id":"de69dd41-ed3f-40b0-9e1a-eb1d40f6536a","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Withdraw Funds","description":"withdraw-funds","prompt":"Develop detailed content for the WithdrawFundsUseCase in bloco-wallet-java. Explain the business rules governing fund withdrawals, including balance sufficiency checks, wallet status validation, and withdrawal limits. Document the workflow: loading the wallet, deducting funds, persisting updates via WalletRepository, and publishing FundsWithdrawnEvent. Detail how the outbox pattern ensures reliable event delivery to Kafka through OutboxEventPublisher and KafkaEventProducer. Include code examples showing exception handling for insufficient balance, inactive wallets, and malformed requests. Describe integration with FundsWithdrawnEventConsumer for audit logging or external settlement systems. Address edge cases such as partial failures, double-spending prevention, and reconciliation mechanisms. Provide a practical example from unit tests demonstrating successful withdrawal and event serialization.","parent_id":"4053af3f-6536-4d0f-b41e-6f8cc3eac024","order":2,"progress_status":"completed","dependent_files":"src/main/java/dev/bloco/wallet/hub/usecase/WithdrawFundsUseCase.java,src/main/java/dev/bloco/wallet/hub/domain/event/wallet/FundsWithdrawnEvent.java,src/main/java/dev/bloco/wallet/hub/domain/model/Wallet.java,src/test/java/dev/bloco/wallet/hub/usecase/WithdrawFundsUseCaseTest.java","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:02:36.468338-03:00","gmt_modified":"2025-09-22T11:55:51.380275-03:00","raw_data":"WikiEncrypted:YvAjROjBEaRKv18tSnHtFzmLC8JKmhPLPPaXMBN04632LvQSFaEWtauRzaZVlH4WNlnapCMdavLJpj/rBqHXBE3alCRf+Br63RdApACs+x4Qum4auT6SqUCe9yND0/x6u+2DTVPUZIJgib69Q5FuRKE2CHKGZso4nZFEIqzSAgtE5AaoziCQqg/ZQgdkGH73TwhB7RArl9gH69Wk+tcAxs9gu2zUHWRIchQk+kCH99JaLDkyrl2opilng0s+ibkodiUcoD0Swe6750oCY7NlY0PbVgysNhaHfw+fprOX+qZKTD4RSZNDMyLcn5FRLKJgxlt3yJLIoy+gQit/OLZeHdW84fncIq6G6kDYQ/I+sgw3caBIw694VpbIPz6mMaGeN6ipJk9MhahCsR9OUfNT2bS8V9eVzbQ69W+maoPVQ5+zHrnIChFU+ML1hsq+raan/NbkocIVuSWNFaIRpbzrSXdY9vCRlt4ppYSoxGpxXTPzF/rM7BJhZY1Y4qBcM4zfs3N5FG4u9Uel8g1S/sMvYjmKEnruGttZSHZU7UFk/V9DrpHEycVlZYwdCs5yeSmTeYavLH1XaOKOV5fhB3qZi160W4dgzppNf1sJBP1aPsA/C28wOyh5OhdhbrvhTZglMUHwQHreeGy7PwErMwqCg3+quwSbV+6cNNMquAch74WimyhgnrOlMnVPGC04Efq5lfgjdF9svuBCn/1O2TJ2ngQwmjfgpFax1Uxxzo9Ygne/+yiblpev4KbwkEmWGfYJYlRvVaIqsjLUNhdRJPMsglVqmiFX7CyaSAy1cIvB7nAdAypDo56aivcpEDRrmtre6wYiA49/oEeYF/GaMzg2dIYJcnnhB319oJuw1PXSEyGEVYM6B2ARgLti44mgHmzWypgwJ6Ydb1Y8II3SrYU4m9tRwGWYD+Wj7OuhP68bjSGYuS1araby4gSAQqn1rITgt3HEBXPzZUwBGezWQktUGJVyU0/KcabVv27so7kG9R8/JGWJAoMYnQJ4HAbVNe1ro0EvAEhgoRR4icWfk3PtzrRcwQF/vAoMXS+zKwuREVgK63OvKLM81TTplLx6+v5y+4w6eQL6vDvXX94jHIXyqcsDwIfFlTPwKRqxk5rHBGnLg8U4QJR37Ch0b3W6PIOIqvpkqMhUZH2prkqdW3S8efUyyND5bMDqTvhO5BHabWLaxnUyDrgxiODpJTeZgAVjA2DULhyNopZzof8/DvQ1pBbSFVsuITvrY2ZYzST8xHmbtbFFc6RIZ7nwjXX6Xr+gsrNK+/59H0VFG0kI4HVkp0QH12kCkt3z2yVRWFLytcZE4F+6nwk5RwSv7ZfB+y67hT2qvTddn6iCiYMoNPKB5fgGrQ9WhBmnlm5C79MZHuv5vm4b+aXdJMAXdQ397JiuakPpzwCPhdp4f+3tQrFs4RwN41T50mYUmsc9aZwDRyssOLLPCdkwI0IjfchgkNtZyTU1AleY1jRhk3Bsh7PHy6auvvH6Q4Jik4IxCJK2FWhI/hOVepz9Se0MmAr8wqHb9pR/oVBmIhtyhdz89N1lW3mgmk6uqOvtBJZ3BarzQ5UsVnrMXqgfAEjF2/fuRoxaf+EtgNQfvdhN7mFKXTZBRVovC/X4/wIf/LPuVYHCbSV4vBbr3AkZZ8dSIBOomRbLKyAdqs/38gGl5i2xOkTCVb5S6JfXKKLnb3VOqytT+8g88tp0q/07qtHW2VCMIHSKQj/I1m9AnBkyoBvz5xuB6lwXLmp5xWsDjapT29FMPyI2GOfONX8WipYDT8B09VYuayw54RqqF2KXpFeOg8ARzbHRl1a7w7XEyGg9eqHHv/4KAn4aFNs4QtB3q/xfi73RVfm34ftyEZ6oLD/wwxdnPY+mMGRAwZt7zLAsenRxUNXRNXytrgXVPtUGIFcXLOgL","layer_level":1},{"id":"56e4c913-6efd-4038-9f53-a6905749d7bc","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Database Configuration","description":"database-configuration","prompt":"Create comprehensive documentation for the database configuration in bloco-wallet-java. Detail the datasource settings in application.yml, including H2 database URL, driver, and credentials. Explain JPA and Hibernate configurations such as ddl-auto: update, show-sql, and dialect specification for H2. Document the use of H2 console for development and debugging. Describe how the configuration supports multiple environments and potential overrides for production (e.g., Postgres). Include information on connection pooling defaults, caching setup, and integration with Spring Boot’s auto-configuration. Provide examples of how to switch from H2 to Postgres or other databases by modifying application.yml. Address security considerations for database credentials and best practices for environment-specific configuration management.","parent_id":"2623109a-022d-4570-aa53-eb5b4cc4249e","order":2,"progress_status":"completed","dependent_files":"src/main/resources/application.yml","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:03:29.47515-03:00","gmt_modified":"2025-09-22T11:57:24.111222-03:00","raw_data":"WikiEncrypted:veTYwq2y4io5qXerCTrkkFIbPLS24lpjasA+uCz79jO5keKps1MihHMLe08sn50xACTlGNvQbN2hfPihCpeBXrlMk2Ifyck3jyTX8pveiklE1Qle7cMxm/1vTvqfs1HAnRYBL/meUcA5Pflw68338p7aCRpo4q5j40WRo3UHzZASYjtZDEHBVzIhyq5w2+xUd49e3Yxrthll7TBxvTyz7Z25eJHWgoHKn6ZqBZZ/mafj40ddCHwDYqwc4HmjLWVf13ejmWyr2CY6i+fVjqwz3Z5Xo5vw18wLS1IJtB1QbIgNqE4/ehTNBSp4kERZLGd9be3iHzARr2Sio5zumYm9srje8H8ZCBLvLVyDtnPLLJ8H1C/vUcWyUyG7FFkvjOcl9Hvuec4S88DBe9gkcdFcFHkwvkg3De2FsveaVdqZw81bws6aco07gFnPhaSxgoA9Z6HT5A29mV9vOLm4gNYWbL3OsoiCX/G+bUi8BwlxwkVzp/dZmoGYjeU2smWtR8+YeB2C1I3+X8hv4PPNe24fDvjXnhHRamhByJIzfeMR1EtGsWrS6vkyaKIBXWw054W42Xw5HwXnc2ELSWcBMYNfFfnsppkd5PALNQmqvFUduPxsr8ZTNRCyhBFvYe+NGq0F8+7R/t5H1hZuvt9N9afE/9x9wdWioYoWUHzStpCcvM8/qJhISIzlqtJBWT3txpVfKrBugwCJ2E9M6bORunjLw4xBLDuFk90RSy/Kl9+f5VX0/m1I4+K3iUh04J4F9uoYD+39VErkxR4YErLkm/jTGOyRaY4ov6CpWyZ9v9rRCMA9OZ0JMNRNuHfNhrFXg5ALLfpbCT4/FxFTdbfjkUYAT4pftXRGmkg2WYxsBUpDK6YIp4E+lwMDz1jXn5iBXtbJUs22t5wwVj4FgValoEipG8CR5Gui5wu/jBo/8Xak7PR6qWblgmC+EJnA/5wn78JXOauj+UkXjPe1usX1zRlrlnLw6Y7KzujXcaszaPBQEiMQCHNr5TrZJ19GFMhKKRFtCbgmlFkezF10YSL3FBXpAWfXsWbcY7WagRfDYyNNJysyRMlzg4U/kzD8aezfzpVdymej6V+934N0vT0L2xfwC8FpmoHdmAoODHmKAowgoZ3DiebRUwACKXRAT/TeQa8AHK2liGPcvxR+y5q9iqRJgtCIeIpreEsaGfrDbL9lmd7YJxPKoJamV1eedCQYY6Jfg5svreF/7JVfH/dHbtrnpDNkz1iJl+KD2PAE1er8pZ0Syj6sSlCRsezHVqP68AmjI8VMAzilQbXUT6FtCKdySXkCzzAZewBCQCIVfpPTbsuIhCx96uGSw5H3IXV4EzlRI3QemPe1fuVtoljJ6z3V9SRzL25AqkeHa5YyB0bVjjvWYsADyTzMCLFSldooqbDd7SJ/+4DmDw+htgy6SaCz+kskdsgumEUco1XRvyxPqaHvpxIMxlsus4yoj+cMzAGVBKS27k19/EdEmypxP1LRaQ==","layer_level":1},{"id":"c23187d5-f52e-4baa-8926-b40e1e15009d","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Event Consumers","description":"event-consumers","prompt":"Develop detailed content for event consumers in bloco-wallet-java. Explain how Spring Cloud Stream consumer functions (e.g., fundsAddedEventConsumerFunction) are defined as @Bean methods in configuration classes like FundsAddedEventConsumer and WalletCreatedEventConsumer. Detail the message processing pipeline: deserialization of Kafka messages into domain event objects, validation of required fields (e.g., correlationId), and interaction with the Spring StateMachine to drive saga workflows. Illustrate how incoming events trigger state transitions (e.g., SAGA_STARTED → WALLET_CREATED → FUNDS_ADDED) through SagaEvents. Document error handling strategies when mandatory fields are missing, including transitioning to SAGA_FAILED state. Explain the reactive nature of state machine interactions using Mono and Project Reactor. Provide guidance on adding new consumers, ensuring idempotency, and managing consumer group offsets. Include debugging techniques for stuck sagas and monitoring consumer lag. Use real code examples from the existing consumers to demonstrate best practices.","parent_id":"77ad1db1-b4fc-45a5-a9fd-f251529bb4b4","order":2,"progress_status":"completed","dependent_files":"src/main/java/dev/bloco/wallet/hub/infra/adapter/event/consumer/FundsAddedEventConsumer.java,src/main/java/dev/bloco/wallet/hub/infra/adapter/event/consumer/WalletCreatedEventConsumer.java,src/main/java/dev/bloco/wallet/hub/infra/provider/data/config/SagaStateMachineConfig.java,src/main/java/dev/bloco/wallet/hub/infra/provider/data/config/SagaStates.java,src/main/java/dev/bloco/wallet/hub/infra/provider/data/config/SagaEvents.java","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:03:37.607297-03:00","gmt_modified":"2025-09-22T11:58:10.604816-03:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"4053af3f-6536-4d0f-b41e-6f8cc3eac024","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Use Cases \u0026 Business Logic","description":"use-cases","prompt":"Develop detailed content for the use case layer of bloco-wallet-java. Thoroughly explain each use case: CreateWallet, AddFunds, WithdrawFunds, TransferFunds, ConfirmTransaction, FailTransaction, CreateTransaction, and CheckBalance. For each, document the invocation flow, input parameters, business rules, domain interactions, and resulting domain events. Show how use cases orchestrate domain model changes and publish events via DomainEventPublisher. Include code snippets demonstrating service method signatures and internal logic. Explain transaction boundaries, error handling, and idempotency considerations. Describe how use cases depend on domain gateways (e.g., WalletRepository) and remain decoupled from infrastructure. Illustrate integration with event consumers and saga state machines. Address common issues like race conditions, validation failures, and rollback strategies. Provide usage examples from test cases and production scenarios.","parent_id":"","order":3,"progress_status":"completed","dependent_files":"src/main/java/dev/bloco/wallet/hub/usecase/CreateWalletUseCase.java,src/main/java/dev/bloco/wallet/hub/usecase/AddFundsUseCase.java,src/main/java/dev/bloco/wallet/hub/usecase/WithdrawFundsUseCase.java,src/main/java/dev/bloco/wallet/hub/usecase/TransferFundsUseCase.java,src/main/java/dev/bloco/wallet/hub/usecase/ConfirmTransactionUseCase.java,src/main/java/dev/bloco/wallet/hub/usecase/FailTransactionUseCase.java,src/main/java/dev/bloco/wallet/hub/usecase/CreateTransactionUseCase.java,src/main/java/dev/bloco/wallet/hub/usecase/CheckBalanceUseCase.java","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:01:21.890343-03:00","gmt_modified":"2025-09-22T11:13:12.991299-03:00","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"60e1de55-5f3a-45eb-abee-9e8a3192b46d","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Token","description":"token-model","prompt":"Create comprehensive data model documentation for the Token entity in bloco-wallet-java. Detail fields: id, networkId, contractAddress, name, symbol, decimals, and type. Explain the TokenType enum (NATIVE, CUSTOM, ERC20, ERC721, ERC1155) and its implications on token behavior. Document the static factory method `create()` that emits TokenCreatedEvent. Describe utility methods: isNative(), isNFT(), isFungible(), formatAmount(), and parseAmount() for handling different token types and decimal precision. Explain the role of decimals in amount formatting and the mathematical operations involved. Illustrate relationships with Network, Transaction, and Wallet entities. Provide examples of token amount formatting for display and parsing from user input. Address validation rules for token creation and integration with blockchain standards.","parent_id":"60954f52-83b0-4982-8f6a-e7d2faa3c179","order":3,"progress_status":"completed","dependent_files":"src/main/java/dev/bloco/wallet/hub/domain/model/token/Token.java,src/main/java/dev/bloco/wallet/hub/domain/model/token/TokenType.java,src/main/java/dev/bloco/wallet/hub/domain/model/common/AggregateRoot.java","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:02:32.748964-03:00","gmt_modified":"2025-09-22T11:59:28.292702-03:00","raw_data":"WikiEncrypted:BNQwBTrLoJXpxFN0JfaqoHV558dUiHuwdErsZCXYqcE9Mq0YaCzp8ao6Tf3mtD7h7SHxNyoHyNZndBZHwjWxZ/8KnwmYLnUkhfNFDcMXEyIxt/D5TaErpk85KiIhjUbyyu7TbbDzrIqDeyziQA6nJCDmdnCRj8tArZLaH8v5fgRaiO9L11aLIH/I/sdd7DRkSIi9IUGJ/oTjLqPjz/7Vd+i92WqzQGGgpfC1GoojllTv0HebUqnwioCTaY/z87zTX3Rkp7GksgoaNp6UlJ46bjDVR9MvPKFZuS4h4YjBNUf8hIV6QSmzPh7lplAneMqPEvYn05h5AwzJqBW3mghhkYndYF5DHt5aPgBuL7jhIb33yKq4Pzrv60xsqyE0lvad144cwJfZrpSlzOGh4nLwEXIZZu70dp0jMRKkazrsMY0B2Rw2G7g7n7rj/RcWzk68Q5sb9mMihnCrPK5KLdkA+YO2m/L4hsq92CXPmekvuSLeRUFhYO/t8hZp8ru9anx91wNUYNkgPCqzwV5O7EQPum6btQen19mNmaF5QEOYR5NzEz/oldNB5To3QZUsAejGPUfTUCfcDuncrWr22A3RYLMq0PWqWI3yMZRCH3XBP2N///jO8yP3PdkJ8RIB1g42U2ini4syCaOWPk6dPepG4HJpxNJDolsmbhEzCdqJ3nvNq0U2/5ovS1Dd31Pzd/SLcR/SzkFuITWzkjaYOzjlpkyLV5Cgi7gdRgB7/dvBOUsTxAAuJ0UkG8bwGMclVQu2ZEFJD8to6dzzSwU2QzmRiJblWyTyEkd+UPzRKrVKEjJDAyA1SPC8FBccVer6FqFGSVyg3kIRxbLxYe2/r/wi9ZaZpQlw7G9eQREtpbbt1+OZpiiG+ySGh2TEI6dq4MUQ7UNNyblBxp6Fe3R92oh+CBVTVgUStt4h4VqsC7Y3fahTcYRNKq6fDguxXYw5JOPUXRx5O3mYQMK+vfsrDaKUmwuSa6hXkfwZvFf2Y/REDgaNXFxpUy5+KhxmC27QNY9Uw1VZ1FH9heqCU5zMtFUmoaELtAaFmOpVp75V2fmfkgndGHx+/h/gBaZzxGsF1IyEKKcLpxELvyeyEhBWOLVSHhLoObICYe3PfcCwnx8SDFHkyY83L3q+V/LxjJJVvbM/dUGYdhAImUQI02t/mdOBDd0GUd8oyYipuLB3hkwZ8yMit0QfVAenDGCdhmPGQ4cknUosdBJ+mIGm4E6oEtLoOepIoViH9lf0RWPpg+3dK8KXkmQ9VqU1mim49f9kOQyfBl5qkh6oHhkkvQLPgvIIVEunP/g3qtrreyFpKgSgwKDCi5gZ+UA63XgK40rpUaUmrsja1AfyVolL7I2jWiSPDiFqK+yfzJf3/Phv9Ivvl7MWD3jLOGvndC/uufUfA6yXVWhh79iGgF/5wIroNoHhGGjCq0KbWxFsE55VM0HHG3aT8zO/3SarJw6J2gzBoLPFj4sDXQdo385GqIAM12qc67clTMIkQHsPdx+fIjyl2gShcQWqf8ky6OpPhH9xqFG0t0GJkgMrbrdmATzKln7VqJ/XLTeFNLkxXhKyom4MWmsQG8nBoNAkthMl/LyWl7p1orMm17beBv7MrzKODxFh20lh4KEmRqVMbQMddaE+04EGUoL+zX9WqJDzodVVCNI1XePFFFoFXI6Dmj3n0dfyjB5fQwA8hbDolWy0NrGtv4E=","layer_level":1},{"id":"94879722-4491-4a5c-9ad5-dc7e19e26878","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Transfer Funds","description":"transfer-funds","prompt":"Develop detailed content for the TransferFundsUseCase in bloco-wallet-java. Explain the end-to-end process of transferring funds between two wallets, including source and destination validation, atomic balance updates, and event emission. Document the use of transaction boundaries to ensure consistency across both wallet updates. Show how FundsTransferredEvent captures transfer metadata and is published via DomainEventPublisher for Kafka delivery. Include code snippets illustrating error handling for invalid accounts, insufficient funds, and network failures. Describe integration with saga patterns for distributed transaction management and compensation logic in case of failure. Address idempotency using transfer IDs and deduplication strategies. Provide a real-world example from test cases showing successful transfer and event propagation to downstream services.","parent_id":"4053af3f-6536-4d0f-b41e-6f8cc3eac024","order":3,"progress_status":"completed","dependent_files":"src/main/java/dev/bloco/wallet/hub/usecase/TransferFundsUseCase.java,src/main/java/dev/bloco/wallet/hub/domain/event/wallet/FundsTransferredEvent.java,src/main/java/dev/bloco/wallet/hub/domain/model/Wallet.java,src/test/java/dev/bloco/wallet/hub/usecase/TransferFundsUseCaseTest.java","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:02:36.470514-03:00","gmt_modified":"2025-09-22T12:00:15.104137-03:00","raw_data":"WikiEncrypted:5TgAtbdUXqbKL9lWGANcdQFxalO2zQLDFF5wcaQlDQpgIe7o+lsox32fkgNPF7tSNPNJh4RPDJlWQP5pyjKtuywVwlvQUr4R2NK8yxFnwAYMEEnSaufvgsqmdda8TaCNx16ddjceE23va9lmM/HBbLGrw6J/ar2itvPWD71RAW44ia0AdzefqlkfbTT9fJCniEk4+XYZuKRXLBImfcMmzeACm5ecGIohNKEumjYxJ0j8dAL6V2q1o9QMrw/ydllxTw04Y+pVB784GHg3CgSkMn7obnltjP4qXfLzbyEDc8Qz3ZDA1u7rVsbxIHM74xEDVz45KyI/AyuFVmBxe8EqIGh3X9pNCGD/C1s23klRXuL3UqvlVO88GBE5xrovdVUwgUnNXRi2M7AeaUhN7pDDYS0cbns6pInLs80eI8FzDxBMErsM6D7nZqhLVAG76mRtYSHc9NevetlHm0xbZk1HkUw+B3Qj+WEnM1kY3ogVHVBszmqPqEfeZOn4Z8GWUeyAOrCgTZAxn6ji7Uto8fySCy82EbscrAA/QgkM1WeKV3DGenLCL3FjUNElMlrcr3JqlGznBs6IPkQuuGCqdfzpGj1moK/l27nSh5+461kdP4Y6D0J8o6AgGPEBtCO+szc8azIsI9eLSzRHHbgw9ewbP94XLnZQsxdw7IfWaM+Iz6N4ilkDvbAPmWr9rSDjNvUz8mULO3gFbtdPFb9Ksi/yoWOUcQUJAuEfawueiK71giEYnv37jNtrDhNssybarABQ2EERA8gPwOvu7qo3kk56zA0SxBQFxWbBKxixoDO84wj76DfTRKtzKJaR66bN+4QnxX19wMaqy7U7ts9O31+VURdsTcLkujvc9L9Z2EVuXaKH7tkoWQn3il2oFAjmkvyCQ4aR7TzezIMWvTQu245/UUW6hK2WySgkgDjUsrrGamdwuFeDT8jHhEx+Ygm1HgZR9opxd4F0HBahJ4SQ+Z+5AqlFVIFxGtSIY4YB7AOdDqtZpZTqQy+839I73jVzcmniybRoYCCDSEMpHtvlY5EKI7i/aIzDB8/dfWmHmtYqdwhG5vXjDWf4GjLKhSlmUg7nymyYayiIGEIDYiiJE2z+33ZlGhDg/0Nb1RrkuNsXfFHM/U0jUNdhFIxr89km0AEdpR3Jes0VMNbzZoybOc47BtX0A+CiTfsNge7FxFW0GeOwaVe3Ycxa8cJiLyBX+A8maSY5u/Hf3keJW37xLKVv0Q4V3ssLkQBggyZHAnnIqg4nP1j139F/RsgH1+zI7vCZhkdPeWQMj8mtVPzMbLmQYTy4C41nQurOs2TnR5h1gNEa1IPq/+ztHJgTOZvFjgI0nJNvSAbE6DRU3/QPZjfjEibqxK07N449aWLYkWfynUIsz8cUMFJqlNWUs/BdwGjL/OB+n5MSzOhxjU65UqmEUuNPuiTQbma2GOwkA0DLLjpqwA1iB0WhZb67qnGkncQ+GKxr7icjl4mCj9hy9cVY7Ql/HcEz6aRBEQMhjAnr3oTy7NiNskCX95UNp5bwAXb+pgamMGfJP3eTOj7MRDrqjKbvvhfK5A0JAaITMlo2WpZ8yGLIOpKb8qKH3C5zVr4i2BwoLL0iCq8zODmVU7fQPPv3ekShDjyL62xDtqjEfesCnBfTrRzhPSkA0cXiAnfk7uQ62P8ppRgOg9eKYq3UyOSa29Llo/Ek5L56emPjrDuvXT2P8zuqHsWYBn1gUUGPMwZls5H8UZCDRgQERIegwjr6UjSLFSDR5cBjHfcJZgoi1moCfFf1vsCT7PCZLkoVc+C6ydDa7KXriX9kbFkZMyKZ5XLtccX3r981pBBfV0scKFr0hOLonpPVBNO6HIQTGumIwnqRMWpu7Yn4JL+4BQ==","layer_level":1},{"id":"789e8c60-3b4b-4b94-b129-871197030c86","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Outbox Pattern","description":"outbox-pattern","prompt":"Create comprehensive data model documentation for the outbox pattern implementation in bloco-wallet-java. Detail the OutboxEvent entity structure including fields like id, eventType, payload, createdAt, and sentAt. Explain how the OutboxService coordinates saving events to the database within the same transaction as business data changes, ensuring atomicity. Describe the scheduled processOutbox method in KafkaEventProducer that polls unsent events every 5 seconds and attempts delivery to Kafka. Document the dual responsibility of the outbox: providing transactional consistency and enabling reliable message delivery with retry capabilities. Include database schema considerations such as indexing on 'sentAt' for efficient querying and TTL policies. Discuss trade-offs between immediate vs. delayed delivery, and how this pattern prevents message loss during system failures. Provide operational guidance on monitoring outbox queue size, handling poison messages, and scaling the worker process. Use sequence diagrams to illustrate the full flow from use case execution to Kafka delivery.","parent_id":"77ad1db1-b4fc-45a5-a9fd-f251529bb4b4","order":3,"progress_status":"completed","dependent_files":"src/main/java/dev/bloco/wallet/hub/infra/adapter/event/producer/KafkaEventProducer.java,src/main/java/dev/bloco/wallet/hub/infra/provider/data/OutboxService.java,src/main/java/dev/bloco/wallet/hub/infra/provider/data/OutboxEvent.java,src/main/java/dev/bloco/wallet/hub/infra/provider/data/repository/OutboxRepository.java,src/main/resources/application.yml","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:03:37.609572-03:00","gmt_modified":"2025-09-22T12:02:27.584446-03:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"77ad1db1-b4fc-45a5-a9fd-f251529bb4b4","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Event-Driven Architecture","description":"event-driven-architecture","prompt":"Create architectural documentation for the event-driven architecture in bloco-wallet-java. Describe the implementation of domain events (e.g., WalletCreatedEvent, FundsAddedEvent) and their publishing mechanism via DomainEventPublisher. Explain the outbox pattern using OutboxEvent and OutboxService to ensure reliable event delivery. Detail Kafka integration through Spring Cloud Stream with KafkaEventProducer and consumer bindings. Document event serialization using CloudEvents via CloudEventUtils for interoperability. Illustrate the full event lifecycle: domain change → event emission → outbox persistence → Kafka publishing → external consumption. Include message schema examples and topic configurations (e.g., wallet-created-topic). Discuss delivery guarantees, retry mechanisms, and consumer idempotency. Address monitoring, tracing, and debugging strategies for event flows. Provide configuration examples and performance tuning tips.","parent_id":"","order":4,"progress_status":"completed","dependent_files":"src/main/java/dev/bloco/wallet/hub/domain/event/common/DomainEventPublisher.java,src/main/java/dev/bloco/wallet/hub/infra/adapter/event/producer/KafkaEventProducer.java,src/main/java/dev/bloco/wallet/hub/infra/adapter/event/consumer/FundsAddedEventConsumer.java,src/main/java/dev/bloco/wallet/hub/infra/adapter/event/consumer/WalletCreatedEventConsumer.java,src/main/java/dev/bloco/wallet/hub/infra/util/CloudEventUtils.java","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:01:21.891201-03:00","gmt_modified":"2025-09-22T11:15:36.513909-03:00","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"da643e96-9bb7-47e5-b266-da0f3e96529f","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Vault","description":"vault-model","prompt":"Create comprehensive data model documentation for the Vault entity in bloco-wallet-java. Detail fields: name, type, configuration, and status. Explain VaultType enum (HSM, AWS_KMS, AZURE_KEY_VAULT, GOOGLE_CLOUD_KMS, SOFTWARE) and its security implications. Document VaultStatus (ACTIVE, INACTIVE) and lifecycle methods: activate(), deactivate(), and isAvailable(). Describe VaultConfiguration as an immutable holder of provider-specific parameters with factory methods for AWS KMS and Azure Key Vault. Explain the static factory method `create()` that emits VaultCreatedEvent. Detail cryptographic operations: generateKeyPair() and sign(), including preconditions and error handling. Illustrate relationships with Wallet and Address entities for key management. Provide examples of vault configuration for different providers and integration patterns with external secret management systems. Address security best practices and failure modes.","parent_id":"60954f52-83b0-4982-8f6a-e7d2faa3c179","order":4,"progress_status":"completed","dependent_files":"src/main/java/dev/bloco/wallet/hub/domain/model/vault/Vault.java,src/main/java/dev/bloco/wallet/hub/domain/model/vault/VaultType.java,src/main/java/dev/bloco/wallet/hub/domain/model/vault/VaultStatus.java,src/main/java/dev/bloco/wallet/hub/domain/model/vault/VaultConfiguration.java,src/main/java/dev/bloco/wallet/hub/domain/model/vault/KeyGenerationResult.java,src/main/java/dev/bloco/wallet/hub/domain/model/common/AggregateRoot.java","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:02:32.751359-03:00","gmt_modified":"2025-09-22T12:03:57.70281-03:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"5f7d2d9b-3075-41d4-b456-062387274e6f","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Confirm Transaction","description":"confirm-transaction","prompt":"Develop detailed content for the ConfirmTransactionUseCase in bloco-wallet-java. Explain its role in finalizing a transaction's state, including validation of pending status, cryptographic signatures, and external confirmation sources. Document the flow: retrieving the transaction, updating status to CONFIRMED, persisting via TransactionRepository, and emitting TransactionConfirmedEvent. Detail integration with the saga state machine to advance workflow states and trigger subsequent actions. Show how CloudEventUtils formats the event for Kafka and how OutboxEventPublisher ensures reliable delivery. Include code examples demonstrating idempotent confirmation, handling of already-confirmed transactions, and rollback implications. Address security considerations such as replay attacks and authorization checks. Provide a usage example from integration tests showing state transition and downstream consumer processing.","parent_id":"4053af3f-6536-4d0f-b41e-6f8cc3eac024","order":4,"progress_status":"completed","dependent_files":"src/main/java/dev/bloco/wallet/hub/usecase/ConfirmTransactionUseCase.java,src/main/java/dev/bloco/wallet/hub/domain/event/transaction/TransactionConfirmedEvent.java,src/main/java/dev/bloco/wallet/hub/domain/model/transaction/Transaction.java,src/test/java/dev/bloco/wallet/hub/usecase/ConfirmTransactionUseCaseTest.java","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:02:36.472675-03:00","gmt_modified":"2025-09-22T12:05:49.563944-03:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"2623109a-022d-4570-aa53-eb5b4cc4249e","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Persistence Layer","description":"persistence-layer","prompt":"Create comprehensive data model documentation for the persistence layer of bloco-wallet-java. Detail the mapping between domain models (Wallet, Transaction, User) and JPA entities (WalletEntity, TransactionEntity, UserEntity). Explain the repository pattern implementation with domain gateways (e.g., WalletRepository) and their infrastructure implementations (e.g., JpaWalletRepository). Document database configuration in application.yml, including support for H2, Postgres, MongoDB, and Redis. Describe schema design, primary keys, indexes, and constraints. Illustrate data access patterns, transaction management, and query optimization techniques. Include examples of Spring Data JPA and R2DBC usage. Discuss multi-database strategy and reactive vs. blocking data access. Address migration strategies, schema evolution, and connection pooling. Provide performance benchmarks and best practices for efficient data retrieval and storage.","parent_id":"","order":5,"progress_status":"completed","dependent_files":"src/main/java/dev/bloco/wallet/hub/infra/provider/data/entity/WalletEntity.java,src/main/java/dev/bloco/wallet/hub/infra/provider/data/repository/JpaWalletRepository.java,src/main/java/dev/bloco/wallet/hub/domain/gateway/WalletRepository.java,src/main/java/dev/bloco/wallet/hub/infra/provider/data/entity/TransactionEntity.java,src/main/java/dev/bloco/wallet/hub/infra/provider/data/entity/UserEntity.java,src/main/resources/application.yml","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:01:21.892831-03:00","gmt_modified":"2025-09-22T11:17:06.548153-03:00","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"5dbd83a1-bdbd-4d23-9534-72e0d738d218","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Fail Transaction","description":"fail-transaction","prompt":"Develop detailed content for the FailTransactionUseCase in bloco-wallet-java. Explain its purpose in marking a transaction as failed due to validation errors, timeout, or external rejection. Document the workflow: loading the transaction, validating current status (e.g., only PENDING can be failed), updating status, persisting changes, and publishing TransactionStatusChangedEvent. Describe integration with the saga pattern to trigger compensation actions such as balance rollback or notification. Include code examples showing error categorization (e.g., permanent vs transient), logging, and audit trails. Address idempotency and prevention of status regression (e.g., failing an already-completed transaction). Illustrate how event consumers react to failure events for alerting or retry mechanisms. Provide a practical example from test scenarios demonstrating proper state transition and event emission.","parent_id":"4053af3f-6536-4d0f-b41e-6f8cc3eac024","order":5,"progress_status":"completed","dependent_files":"src/main/java/dev/bloco/wallet/hub/usecase/FailTransactionUseCase.java,src/main/java/dev/bloco/wallet/hub/domain/event/transaction/TransactionStatusChangedEvent.java,src/main/java/dev/bloco/wallet/hub/domain/model/transaction/Transaction.java","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:02:36.47472-03:00","gmt_modified":"2025-09-22T12:06:53.535624-03:00","raw_data":"WikiEncrypted:SJTVYgLDjtYUY0AaPJdlK6WCt/PsBWbpEMvoWhS7A0u5ik/EjXR0x/UrbxQUTMKu6RiHKwWpJ4Zve8ERJPWAHGsg/+kZYtThgLDL3bGBS2EY/VFr8+hGwYOgCdg2nHwXm39q92Tq3a7SyktEk2h3d9t0IY2HGiKrb/ngixVjRTrwyRGxzzbVnw7rfpsGSmvuTgeMbpiBMmKWtC4E2Pn6D+4WNEOY8eKDBSAxDA92CRA+y0atqK2kc8v5IQWkMOQ18t6ourwRED8luuTwEsupbsmvV3iN8BhptzCrUf/EqHRD70GzcK5qlmZV5xfh8DvfqBP8VQ/t+T1TiC65GLG5WLlRvz6EBlR8bzoCeH/fd93xeUe5H/CuycLw2qjNMClboTlIgHVxCLDpraoZdzdTmiGjgJPEMnOMjf++BL/Tt3tgXfJSvcYCl4ZYqBCMM1+yldEwWM1tY+FeHkrRseSiJyQ4XZhC3LwdQh+sgLL/QJ1W//WDdA28vCsJcGmSB/+gyjB9LpYPKazrFLGClzSN1RCIHbhvqiHyWYvB5ERGF68Lv7bcb8EK+KaScD9sLzTcdNEZvCbn04IJakbs3tRY5pmD/cIPzdeSvCVGRwJTnR7+jtxU6nHo8VhcLQm4dLTULoRrE1N+1NRZ2lQs0qZJ2N6KKpBpUw2ydMcAXtY2A7GSeMGLlDwtqRwPkNITX4K3wz0oh+H8nejuH9St2p/xI8p9UYNEi/B6yo/A6o9rY2sY6r2+14GvCfzkgkc3k6o1Zqox69TIVsyPHwv11/r+/Ft4SwLW43zAYfCn+ts97XVgTWd+vq4+iU54AFOlr8ekFIwigH0/FMTqET/qX7kz+M+vSruBgRTrS+xp8a6IYB95gc0rup4cxIWFHijMm/CmrP06jcqjAtpd5EmLUl71cDpzBAf0i2acC1WXmGHjMJ5c8wC80oOGA1v+bP3MMyuYslygy8KXWSzVU1GQUtEYWOlUkaqLHMDGDzKtSRKViehZV1mdE+0R7Cztznrm7cRaf6nmHLgfV+aC8/kQWS8qXQbxVz5p4vzDSJCZRG5rZfx0ryDS1+WA2Viqll8acYTn7ACmDfPmSs47j+wHsPcjEc5rrYKPjZPV8wOS0yyByBQhdlwg1B/kC21aDTcg9wXzwb0vLPoDB9JRLj9jOZtRyB67ryHEIUa/9hi1yAmHQeFQWw6klwGeyZLRvHOsa0gxF/O1/iBmmxxlZ0tVu3XEbHMRcQUWaSW+T5j7f7z32SarwaET2mRAWD2jNvB5MZqdr3MKOhhXmrLOwgXUrR4a0r9pPdOjkAvGEyVI4a4yakjebYOA3zgljNyzcY2WTTEzLm+0TwX1niAIROJTkrpS7R4rASemDonwLb+CSEIYLkR+WfHPhxQ8Yw8SLUDmlT8dADrhigZxOXNFUI8qkp92lfTeqbAeN7i3BrGGs7TBKzfzzJBYjmXQxjxuGMjKgztSS1fUGDLHeY/ben620UqmT936bfoi1Y4maDTwIfKcH22ejvApaRtr2PG/SiO3A6mmvPkZEgcR5myZPgvNTMdrMIyxb+C/Zf5AvH8r7ZBsYYhNN+MjROgg3alYJfDyGHo9nMsNkpKYYf3YuKcecaEJnwNkTJ0GDZfz9Ue53rU7Gi+V3CFRYVW5MkIq2jzlpBR+KKq4nQZwTwwDew9d45rzskLKm7TEqiwcf6TzwMj6nYkJIY6S0wB0cHjIi5Hhk/fPld7dL26MLLBID70pKaqMPHPf6rTnRBeIAPSa71cZg39KQws+5Ps2Y5U2SfCntg5dMRGjGyxFSU4Hkb59pGyhLYeUqJHLBXCIms8cTrlo9i21bsfFH5E7mUCfXwjqY7w+","layer_level":1},{"id":"2da89f45-176c-4d2a-b811-7e4e6819d35d","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Outbox \u0026 Saga Patterns","description":"outbox-saga-patterns","prompt":"Create architectural documentation for the Outbox and Saga patterns in bloco-wallet-java. Explain the Outbox pattern implementation using OutboxEvent, OutboxService, and OutboxEventPublisher to decouple database commits from message publishing. Detail how this ensures atomicity and prevents data inconsistency in distributed systems. Describe the Saga pattern using Spring StateMachine with SagaStateMachineConfig defining states (e.g., PENDING, CONFIRMED, FAILED) and events (e.g., TRANSACTION_CONFIRMED). Illustrate state transitions and error handling in long-running workflows like transaction processing. Include configuration examples from StandardSagaStateMachineConfig and state/event enums. Discuss persistence of state machine state via StateMachineRepository. Address scalability, monitoring, and recovery mechanisms. Provide debugging tips and common pitfalls when orchestrating distributed transactions.","parent_id":"","order":6,"progress_status":"completed","dependent_files":"src/main/java/dev/bloco/wallet/hub/infra/provider/data/OutboxEvent.java,src/main/java/dev/bloco/wallet/hub/infra/provider/data/config/SagaStateMachineConfig.java,src/main/java/dev/bloco/wallet/hub/infra/provider/data/config/StandardSagaStateMachineConfig.java,src/main/java/dev/bloco/wallet/hub/infra/provider/data/config/SagaStates.java,src/main/java/dev/bloco/wallet/hub/infra/provider/data/config/SagaEvents.java,src/main/java/dev/bloco/wallet/hub/infra/provider/data/OutboxService.java,src/main/java/dev/bloco/wallet/hub/infra/adapter/event/OutboxEventPublisher.java","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:01:21.89445-03:00","gmt_modified":"2025-09-22T11:18:54.961374-03:00","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"9bb7b176-b85f-4338-965e-2351d3c3a9ff","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Create Transaction","description":"create-transaction","prompt":"Develop detailed content for the CreateTransactionUseCase in bloco-wallet-java. Explain how this use case initializes a new transaction with proper validation of sender, receiver, amount, and transaction type. Document the creation flow: instantiating Transaction object, setting initial status (PENDING), persisting via TransactionRepository, and emitting TransactionCreatedEvent. Detail integration with the outbox pattern to ensure atomic database write and message publication. Include code snippets showing input validation, default field assignment (e.g., timestamps, hashes), and error handling for invalid addresses or unsupported types. Describe how Kafka consumers use TransactionCreatedEvent to trigger processing pipelines or update balances. Address idempotency using unique transaction IDs and deduplication logic. Provide a real-world example from test cases demonstrating successful creation and event routing.","parent_id":"4053af3f-6536-4d0f-b41e-6f8cc3eac024","order":6,"progress_status":"completed","dependent_files":"src/main/java/dev/bloco/wallet/hub/usecase/CreateTransactionUseCase.java,src/main/java/dev/bloco/wallet/hub/domain/event/transaction/TransactionCreatedEvent.java,src/main/java/dev/bloco/wallet/hub/domain/model/transaction/Transaction.java,src/main/java/dev/bloco/wallet/hub/domain/model/transaction/TransactionType.java","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:02:36.47621-03:00","gmt_modified":"2025-09-22T12:08:49.019179-03:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"36845801-3b35-4de8-bc4f-4e8b6b375266","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Configuration \u0026 Environment","description":"configuration-environment","prompt":"Create comprehensive content for this section focused on configuration and environment setup in bloco-wallet-java. Document all configurable properties in application.yml including server settings, database connections (Postgres, MongoDB, Redis), Kafka bindings, security configurations, and feature toggles. Explain environment-specific overrides using Spring Profiles. Detail Docker Compose setup via compose.yaml for local development with MongoDB, Postgres, Redis, and Kafka. Provide step-by-step instructions for environment initialization, including network configuration and service dependencies. Include examples of customizing configurations for different deployment stages (dev, staging, prod). Address externalized configuration best practices, secret management via Spring Cloud Vault, and health check endpoints. Reference real configuration snippets and show how they integrate with code components.","parent_id":"","order":7,"progress_status":"completed","dependent_files":"src/main/resources/application.yml,compose.yaml,README.md","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:01:21.895932-03:00","gmt_modified":"2025-09-22T11:21:47.602165-03:00","raw_data":"WikiEncrypted:aC5ZtUyEKPSxjzg//aVllEmjjD+mS4moNlsGnmxLFADpuGPa+EKCxY9YIaAvAs8wWJKpsXZ1uZhKl9KS+2Zzemd8g/Miv0P6X1ngNdL99DScIEwI6vvWzwJTAmJqcQpZ+IB645LHlQxPaPY7asW0qnSPPUgylRQcSlKxH4tT1cg5Wp5W8JLHxrwVVs2itff0UeIqom1RiilRmn0k5TJEwL+rPuveB9ryNsfzAYsljBKT+iExn9NREEhh7PQAbXjmn+2y8dMu2beLxybdRF90T+KwSL3v5Y5lXmFdM9NqrkMuL6IVr8Xj1j5+o8gppK4X4qDzAW14XTMrutH7siEznD8/t/md+OwRvLJD4hv6TdU6Ax/5zznG36TUVzHA3vp1DDq0zzd+x+2Xdpdh25IXxmiwRVvdWHKTAnFnsqa+uyyBF96tdZB2L18cqMitEjg8lWDlOG78WHx67IfxZtPO0SiypJhZZyNp1kaCawvNlaeYhzVmnmFNPjMu09W2JR2sp1xPq7G8jj9P01/UBlWHZZphNeEfNJY0GtS4nQyLdd+GrHfV1f2r5PS9hLVRP5xd+ga0jgwDGiByw3SHWaSMfwNLGRbSwi1LNb/jWvi1GEe2SHNOZn+vfkqGYF0JRVadXMvUH0z8AJO+dAQrfbvDv3O6gdAunOBxiKY0BLu1sd+4YeILkWV/AVFBR+lwPq0dmQQZiszG9WKlCo/S+UhC3PbnsXQVkFVsVQOx3TyUqMJ//OWabx7IYHX8p586Wb7q09iebhJzEMD3ymrqHKc8xxK18MnjaRZ3n+0ooM8g/LSfvGqod7QQlQMw+KkrDs6s72vy5vyXvm2e9FC8usYSb6wKbpb29zJBklZ9Un9IeNNp5A+7W0bXd9gL4peGotktGjxq4UDxcagnvab8N9+6gklEf/vHsQcoBPxfzzoYAOvOwDFmJM0AKY6rk+zFNBdH0Q4E1YE38Keq78iZS/Eky46LSNnlAqPrbeXGK20enzwmse0aJdd6/iimd7jX3nprRMDsQESyVOvFZAvqmaHpdq8zwMrDPiXJeqcTg9WRoUNgs7hNMcFFZdx4PVM5tgb+Mv8ObnsSdq65rkP5EuXZ51jlzxfvRr3lDF3ibOntmYwqgmSsw1uRyN9/oJNDxSo2+5d2iltWRskrQ5BNP7YiQP0eyqp8rPlkYpSaA2OTDH6IZpKDiWQUuWHTHntxdk2NBsQljBizhxUJAdJ+QcKkZQ78rQWWP9eb1V5xJeva+2ZgtvBW5M7++n4hEWIi1H7yYTAp46Qve75UEXQYupsZ2im4lGP/Grrlzs3T8Wf111RmmFpuNyMAd2QgLeZAq7tfn2hhIyT3q/II39iN7jD1/auoFRuaw60LmySy3oD+udRYYPJa95aBq2TGL/QSMQrQAtw7yCsFfj3i5H2sXveZ97Txl6K9D54f3Oyy/ZUrH1aq6zlKiA3FS+fkIrhyXYWdP5z9Cfg39FE4IDzdcpw0Jku5DUfQqvIz88tQCIGxmaVKw7mevCxDYjjaCqpvywjJq9f+SdNEptFntif0qQHakPaKXeAzVnKR31Z0LftEt6gD/vzLc9HYmaJHzI1ddBZcLh2ljz7ISUli5ybieNVvwQ==","layer_level":0},{"id":"f1e7faa6-cbbf-42be-bc5b-07b5cfee06f5","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Check Balance","description":"check-balance","prompt":"Develop detailed content for the CheckBalanceUseCase in bloco-wallet-java. Explain its role in retrieving the current balance of a wallet, including support for multiple token types and currency conversion if applicable. Document the workflow: validating wallet existence and status, querying WalletRepository, aggregating TokenBalance data, and returning the result. Include code examples showing read-only operations, caching strategies for performance, and handling of inactive or deleted wallets. Describe integration with reactive programming (WebFlux) for non-blocking responses and observability via Micrometer. Address consistency models (eventual vs strong) given event-driven updates. Provide a practical example from unit tests demonstrating balance retrieval for single and multi-token wallets. Highlight usage patterns in frontend or API layers where real-time balance display is required.","parent_id":"4053af3f-6536-4d0f-b41e-6f8cc3eac024","order":7,"progress_status":"completed","dependent_files":"src/main/java/dev/bloco/wallet/hub/usecase/CheckBalanceUseCase.java,src/main/java/dev/bloco/wallet/hub/domain/model/Wallet.java,src/main/java/dev/bloco/wallet/hub/domain/model/token/TokenBalance.java,src/test/java/dev/bloco/wallet/hub/usecase/CheckBalanceUseCaseTest.java","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:02:36.477667-03:00","gmt_modified":"2025-09-22T12:10:58.459797-03:00","raw_data":"WikiEncrypted:b2BzW+ZGuTxmJjrZDGmKs8Ub3cv2UFpce6/+ZRQ66fvdh0Ny2qi1ratiGRiLwkX0nX8D/sQQdsapNXJwkfb1CAgi/w0NL00/rlUQE+EvyOlU8ZoQ5ycXvebZou5mAVxSIInRiCApIL+aSfIzAwGPXV8jjU70JyHmCTqUKaE+vASB9geBvyKwVIIZxhPrAJGrpZmoeXYqL4vondYLWmn3Sf+ELvHK3oB+PhdTUPUm9C7csBSo1M0Ru6RABQAtJ6ioCyU/jZun9GEh9Wz7NT5t2g3ghT/se6MzFubGKnUQVXFGsjWznynZseOweeOAjMeQK8Vtvpv3Ncep2CFCswC3YnCq/R1GCk9hhYdqtcQBp/UwJgJOn9LhLHREIO2rWvRKHW0/y0KqKq0YhJnZk7YXzqgVTRcs2cK1u6xKVLr9Cg10qDtSaKWwMtZ6Yc/QwU8nvqfxbQTTVm1FzeMfUwri1csI78O3R/e0ic6PAIg+C5ii3/9QOsnhCiBi1opV2//JkLG44oFQ1vliEEi+H30a3T+CPOeeB/zBkQrrWp9vwx2Vc3JekdNcdG37Ja+ozc8oonGqkC+oqM8HQDViOcFEpyxDz1Tm5FWB+KyS8kLBqsqfm1RGf8jf18k6K4fJ6RLU+P468Q2LzZ3mGNxDKDpRIinjaEde9bmkYJ9TIqi7hwbsoCzf1EZlIWh/VFuJ1VHLBdz/usi0tQSfAc97gqh4UQiIob1UHq+y08W3YvylhqhF1HNKAQgXu46Ol0x588XbKWolbpAFZBepxIs3LA80gAX6Vjzo3v9tmKdZ1S7XJZ26Npeeko1QwP0DO3P1+7SfglG1wfs0+QN5KvkBaBG6ZLfA5RtEhD17hDNP3UkgNRJMfou2nh+Y/LpCSaWGpiNzxaRHgzKf9EmoAbe35ztqGebZwPoH+y47WvFjuhnU3Msizfl1IxAuYbbp+WtjDT45nu9zEZ2VeQTT6yML88iWLXjpJ0LYLNMgYHhT3BFaYkzbp8apAOgqB82hPs6rcVpTtPVgbnwJcBKbnQqpF2GvQrEDc7mbNx5P5KcpJ4VlSk4FNvLuuH9u4zvNU7SMeOTcpWFidEuVT7bUvTYQXKs++8j0D3VhTK8bXWhMkkNMhAXi+lvsf8xjoG3hRN9+XESPzkAQmoDbysXy4n5iKx0rFDARpRZNjo6rr99yjIf0OZhnlVowwXUHCpNq5VuVqCYpfijY/M3I9i5TrSxYCe8APRXnQ1s3KK5V41/ED10BZG5NjxTcXQ5biy3pjP95WOa5TrSDYbjp7PYkHBFcReFtqdmo+ZRQoumF4dkF96BQnHDL62/QXmT1lDBGzIzLAuchI5gXyaJ5yg3PWn/wACWDFTcAQCV1LN41cTL3sH6HphVzZQiGQpRXV0/Svd2/ENOU+sP4OT+avBYRvxTqQcyFzbXH2R2hnq6w87auhtvToexzTxiCd+eWiPDLXTDyG+L6FF991UC2jXEvOLx5uu1rJRX/j1E06fGck+WucoZHeiAQJPF2e9Fd/Gpt8XF3vKe8XzR3dBo0QGVwnsAuy0pJPa2e+3LV+Ikt+/GcM/ggtXBNAWnwc4mwo7fn/4Gvil/mjhHA75EcKUqTVUceVdH0q6KpkfCSXvVL5vUUn9MFhko76Fcle1mKLPD+gWJbPlFHU66WL8vrgtRsoalu64IcYhPjyOdsFBKcoQTs32miUbVGej/6MOuWrtMX9jLAzwfe/IFCBrkT/9cic7vd8WybUCOddb8tcVa8S1q8J1+2pIri9kj/f5PtJew2TeKJ6KrKf40bDmS0O7aD6HAUOytxHOv9k3EMAVBartEFq3zOw320ojoY8rC+NmAwfr+Capq9kO+0q5khw2lJSpTPo8zaMQ==","layer_level":1},{"id":"7fc75e3d-ea48-4abe-b7d4-54713108b556","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Testing Strategy","description":"testing-strategy","prompt":"Develop detailed content for the testing strategy in bloco-wallet-java. Cover unit testing of domain models (WalletTest, UserTest) and use cases (AddFundsUseCaseTest) using JUnit and Mockito. Explain integration testing of infrastructure components including KafkaEventProducerTest and JpaWalletRepositoryTest. Describe testing of event-driven flows using Spring Cloud Stream Test Binder to verify message publishing. Document test data setup, mocking strategies, and assertion patterns. Include coverage of transactional tests, exception handling, and boundary conditions. Address testing of saga state machines and outbox processing. Provide examples of reactive testing with StepVerifier for WebFlux components. Discuss CI/CD integration, code coverage tools, and performance testing approaches. Offer troubleshooting guidance for flaky tests and database contention.","parent_id":"","order":8,"progress_status":"completed","dependent_files":"src/test/java/dev/bloco/wallet/hub/usecase/AddFundsUseCaseTest.java,src/test/java/dev/bloco/wallet/hub/infra/adapter/event/producer/KafkaEventProducerTest.java,src/test/java/dev/bloco/wallet/hub/infra/provider/data/repository/JpaWalletRepositoryTest.java,src/test/java/dev/bloco/wallet/hub/domain/WalletTest.java","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:01:21.897193-03:00","gmt_modified":"2025-09-22T11:22:54.793373-03:00","raw_data":"WikiEncrypted:a51tw9+B5Xez88YuZqi4cPV0J1CJauHTZselAZQ9sG40Lb0MosJIfbxZqj+gJA5m8musMdI2GJsw80+O72ORSQ/u80d+EEKBnQWRR3jaEn1m3iEpXZc7aPf0y02QCFvv6Edu16pyXQEKE945/Sv4DiKZLj5TKu2+/aZRFwjyjl48dpNSRUPAI47aCeeQWmBHqVjsLGIr2zCRxuCwZ6f7zjGNwoRrHtkLnu2Gzed5DYwTIe1rycnWs3VCgJ0iROV4R79vvXgvCA/8thIDs54jgHJjoFPSsB4SRW30Hl/04Z+XZPgXFs8o7LzxOlbd83AInXaoZ8JmT+0Vb+hmgZPFP1nc0PMTxT5+Pe5cc0z66U5tfqmFU1Ut1r8Iy7LFmYLtBhApWNZ+nrxRKV5a7mx53dKr/k8GGWtCBE/EqL5RWc0HFdu7/A0Ck2ne1lIMI8Wsa2oXqWVJfh1wcW+9xEHSOsp+RP5TLTyF8TstvO8Q0WMrI8KDOnFQLZNrivsvWsFd6uDxNAT2PJZlxlVZV9e16kVlDA89cB69TeL08mzC9sXzIYe9FdEn2GJ86b7Pu9KFbs1yTmfWxhIi2GDqMgrYH5Ak7773ThseVPl5N4TtURboDrdEPdkxTiU28f+7Nx2T6HJoZstkC+AXknhbVDAiInd59hep5caJQcJ45kcRidUbk2qn08LtsHAEuUYPt4g39cmawINZVGdbsFIpCpjdasZ+pp6YXtVd2HEols5AkeyhnOJQHoexkLEqvIq3B7J7STqPCzuyDuV/ABKgXH8rfclD0AhmZy//6Ep3wD0k7Gxu9bBkvHwh8P0Vodj8t0aW4vG4Tr3QZmIwQ5Y36t3wcS/+g6sNbFA+GopaoKwYhMk/nXE85dFy2ZVNveB/kVoaTfKddzLCNAey7azi8KloxymPixA+AamI13nN3FG1EJmSU85likrPQGEA82XmbFKZKR9ODq/Ah1ep67z0Exs00+DV6o3ARa2+bbJc7UnH2h8PrAaa3G3KfiBpyh/axVrHQya5b8c9LHZrNXTOmReP6gwjJnJ6cfYA7jPHDk9fr1oFk/I6nC5AGR4vTVwQjsmuEaGowfIsjK9/sSeOP33+y54X70ySzy3TJAx7e1KXfUPzEtkVqlA0t/ht+/GpI1hDhXdp23XWvLWrCXhMoWeSrtKkj30BxB/eyAAEtlwNU7xC8Wow7RYe7ApHBDe3J+Ae5alCXrFxQBRRIt8AnUkO8oeaXbGwUlhnk/3eyi8MCy3MbO2K837RdBWJhbKnOX/lU+890Nri9k0r5PyxMbyptnoY0WYEloX++9ckotBxf+v71/rmYkTu7iSmgecMuRWlXhqrmrDu9ixifCjwCUbdrD56Rc1pTMvvAjSJVIe6njpjW4x9KZRDtmQtJpd/4F96BbKY2saYg1dar1Yu1ml1b7ti61MLWgw0+rU9boR/I9kWGEWBV36UkSlWjJDelm9O9oOsnLyaT+CoE2Rhj8exyE08kGhidcajE45u+9uLdBxoGSC3ohY25/rp97/+PGmpKZTQIDKqSVVvJ2TfiblSopeJxIUmq4ehcSzuUyySb5aVCOo4ooG3D3qPF9Wkh9sAXuPElBC76ylIwkoWklFB4sJpx9Nxx0pyEqhcK3ugGAnhEIYn0akn8wKPBgPt/YDX5kPBhmn7CZ97wNeCCpHuYf6MjpHXUHRWMJ1riN63tOYm0ld3GwZ9Rzl8PdTZEGdjsLiHYrF8b0NLSwdyCCn9O9BifNrD0dvp0XMy1hFOuj4TVdIJ+xpvXgkUXh35JDBStqD4YetoU3qiHFj3/FWG15hNpOjoDLojWUz0hK5pDpDFndCirlFPq0n0u4rZvRrQz8jzGkAS+YkYUhee4DIA3/Zc6pXvw8FwkfcLypOPCJxbqr4DR/WpVXmLzJ0+OQ9vVTn6j3yYK0WZLxKnhjrlX6ubn1NYjFI+lkJRLTdYHWk=","layer_level":0},{"id":"a78e2296-42d6-407b-8a06-e4e307a7d22f","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Deployment Guide","description":"deployment-guide","prompt":"Create comprehensive content for the deployment guide of bloco-wallet-java. Document multiple deployment options: JVM-based execution using java -jar, native image compilation via GraalVM (configured in mise.toml), and Docker containerization (via build-image in pom.xml). Provide step-by-step instructions for building the application using Maven (mvnw). Explain how to generate and run native executables for improved startup time and reduced memory usage. Detail Docker image creation and deployment using compose.yaml for orchestrating dependent services. Include production configuration recommendations: JVM tuning, logging levels, monitoring with Micrometer, and security hardening. Address scaling considerations, health checks, and zero-downtime deployment strategies. Provide troubleshooting tips for common deployment issues like port conflicts, missing dependencies, and native image compatibility.","parent_id":"","order":9,"progress_status":"completed","dependent_files":"pom.xml,compose.yaml,mise.toml","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:01:21.898198-03:00","gmt_modified":"2025-09-22T11:24:40.453389-03:00","raw_data":"WikiEncrypted:0IKfLNOWe9mZfG1jVts3wxq1Ie83+Lf6EMuycQSN7s1ZiC4k+Re4cTo/Hl4M5+hO43KrSa+zQXKAvcopQVmlNYYf9VTyZa364VzGxo2GJrSNHVnlGVQTToe5aVywTg3IEg6uaRR0wWwyv570Y4SUwjm5/7XBv0E0dukDtSz+q8I/w6vtJ++DV/ssqJ3iimdoPNNuQkPuVHOpd1vrWBqf24YjqZvjlC3O12iOQGNwKAacTeXiJ+tH5o7imUUAH0tDYNU2cjR8EB/9Gk6TzXOT1BpqM10iBWWN7YsuM2xOyQ2YuPNNaBHd3ROfnP2SPtitgtbJhasuS4vLNuADWDDgvWelEAWjz5TDLzktsLA8FolbpVSjSDAH7sSnYSA4/uvpl6h07JLcyWHCxPFo0YW1tS7IJCnv79PY7Bky0VxB7GD+ShjvXDvfY1UKJ5n5+2IwtmcD84fer1PXqIWPJWSeQNErdLXu422gTsP73Nj5w2aWPHTQ5R/j0Op7L5xrqHdQIiiBa1ECMaM7FIewjgccxrJTfG1pvY1X1HoxsjP9MqtzLK6neG0lICbWvB8zW2s0tiYJM0ZklF8FBP/fN4BpigvOzH/xK/CBeN/G6xAH9GXS7S/XObDmENptyzF7vzPa5j16S2NyfK4AiKaN2kY43owbhbO3MGL3uX6qVH8JM/ECSowOONesCdEXAe+NhlRuJBTNsLzNr2gc975s+rWqdmkRkuzZU3AnLYUf90h47kvl7UHZaRp2IcbKZP+WygoSUjYnWfXYwfHYM4zd/wKK4b/6NwZ+SUCKM/XgE7FxlQ+bNk3Ipn1xIDxHF2yUnWhvfnGU2MugLcPK3C3JNubM2KEwnp4Qd49tRJe5f4oVbv4Clyxxinu3qUmLgFh2InJ2SB6Pk2EEHUynwnlmzDXG42YhvdjWbAwwS0vY7WLVg+/O41aEzO4pSQPhoJ9H0TQpuwR4ttbF4dyBtynjL2SaJaRzfKANnmaJuXVDT5m/Vvd32qesTRvf2NJJ0gIzc9gG30UlolbbzNfn/+Yb1fSSRH8JQOJ9qEhHzMypzTWMxzDBYbD+pPQc8aVuXzxd1Ymuyx4JNcwxbg2mNuxTv4uuJons7EVkA80A0YbBwN9Wks7S2cQgpt1XmLL+L1ktugD99z+T/V4pTFbUEpNbmFXctgDI4AXTKqNOUzngdLCXefVPMewxoUYrieqZttxqGw13kKZYWbvRgFjqaMT3G+0N1i60wiTusiakUbz4YHtzgMBWj0n1jshOnH7AvEGZobjU+E+kMRrX9BinZdtm3gSY+fysT2xHjuK2oYLsAuyPkYQ6H5U2Ywog13JMD74soBoDrElcfBbw88GinhgQCeMFtLQNRbojoV+qtdPQlUZP0vceNJ/FlLOBHTwJ6zQTaHc/3GCZx7etjko8kd1Tkm1TWoYlB9deCHzhE1a8mWTNTMo5O50P0I6Ux1aDW6ZqbFmFy6d7l/7RDd8k+B1IrY1PYeBUMPar5IqwKm+VadbyZ975cVrA0ji53OExe9+/Z6rqlp+gSVvsah4Cs5nILiGOBcZg6clvakDz2H/hhHgwwSayTiaTej+ks6vAHr8fWt3Te4ClI+BR6IFpkiDsQxED1QtODjTXEQoq8T/u/skZg1I=","layer_level":0},{"id":"d3caec72-4da8-4780-9ba6-445855e5db84","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","name":"Developer Setup","description":"developer-setup","prompt":"Create comprehensive content for the developer setup guide of bloco-wallet-java. Provide step-by-step instructions for setting up a local development environment: installing JDK 25, Maven, Docker, and optionally GraalVM via mise.toml. Explain how to start infrastructure services using Docker Compose (compose.yaml). Detail IDE setup (IntelliJ/VSCode) with Lombok and annotation processing. Include commands for building, testing, and running the application locally. Document how to import and configure the project in common development environments. Address common setup issues like port conflicts, missing binaries, and dependency resolution. Provide verification steps to confirm successful setup. Include tips for debugging, hot-reloading, and profiling. Reference the README for quick-start commands and prerequisites.","parent_id":"","order":10,"progress_status":"completed","dependent_files":"README.md,mise.toml,compose.yaml,pom.xml","keywords":"","workspace_path":"","gmt_create":"2025-09-22T11:01:21.899171-03:00","gmt_modified":"2025-09-22T11:32:22.028284-03:00","raw_data":"WikiEncrypted:F3QgleoEfoy16cQggYe9CxlHdPghrSPK4ln1Xjy54hKGNs0aHHSKdGH6+uneDqmuCBe8r/OjlXV54yPZiU8tZYGRIW2jQa1CObBOKBBfSaOhtQLjLakP/XLGdqVO/AhD+N5KHKisp9LaPOGNpbxYmIrpTfU2WhwIZkzCL+bNdo/wmEuzqcD8DM/MNMCJ0zbbwFbY8jeJILmwMfUcqLVcaXznx6EuRRE4AJOV6ATYt3QaTMrT4YhbBEAkOgyXeMOxbiksSfuJ75ZxoNWZRhGGrY9DxQX26n50Qx122OG7eHDzE5AKa/DHjBOKIQNgJLRs3wIsYOsaSH/6906eOcezj6wmxWiuat210I8aRIXxIJTikpaDmCvohQcEm3LziR7d0dhL8LK2OgNg60Ovw+93JToZhrKhg0efHsdzAOL/o625zgKTdgzPFMOUMVGZcns2XY5Qfssygi7X1XebMtiLiJHHa2vm1kiXtqdYmHDf/yYzPsi45IIPfehuz9J8ObmY8t9zTGWt998raEp4wwOO6lbjaBf2+vJDC6e7pxJhq8G7ntAEwXZJrHKIOXX3uutC6K/bOtd4hmd1BkHHZ+3dzQhVm75lWLBrsfEYQdGCbZ5nJlBa79LUEeE7CssSKS4IUWG+/LZX6rwNIrKVpQxzmdHIJPhOKgJCNC1zPEjqrmxPP8fe0YiAsNpANmrQ9XFuBIxDPVTkY7gOD842FJzWO0h6liJfSHSHkGQdRk1LcxlnxcM9jQHf1/6NXMxzX8ORfQhlcFJ8yY8z+KXm/gULOM2X69q/Gv5djKm6f8sGLsUMr8nPgTGOlzl+m3CiIu58zpJB7s+o3zJDmQEte9T8xZp8fOcYQmSZBmTywwov6+5ElN50o+u0PSNSKftUahRCTr8T/f5BgVESK9qbvzTdYFnsGUYC0Z2TOv2JtDRFdklaOTDOLrkWmvIN+maEWFvhtn29tW/MV8KSQGtVDRaDNjFta9Fjg12vNvE2WucAaqIrmFUe5jURMjy1V5IZ/xog4SQQb6+GAZ3qoq+ChwTfqMzKA/EDtpuEsOPXQwz5ZE3LwUtLBuxlqFcFBDdcQ8a5Pph4umQssCtpGYXvcvRPrP1bmj9rf3g5YZ1ntPX6Jrna3LHXKA4H7Wdo816dogPje9UicrX+vCkcAbITlB1mb62T8JI+BT8Jvan+Z58gmz2xzUa8VLzawbrR6jRgutDx91MQ9jW4RKMoV5cse3Der0s2iBUOh0hFc/f6Fdz84KhA40Ra5a2IrNX58w97GsqBU1k/iOWsxBib5RDUCdbVEQ9sCaD/gNYZsHj2z2Frut/k/M+E1UwXM/x2ymJwNkxrLZDfFU411npbzunoTCwmU3PU9HGOKlipO0LSz0qf5cWsFOWlqRQCAbzGjiI9ty+Y7Z5dn11jQDOb2mdfR/xJqtDxzyjwpfaoyFbfkHUS57JZjaspJU+obNzblM8Pz6zQkXBF7wMS01rG7GLZUiil2ZDP3SyVXKSA9Vs+JoxNRa6GIkVBfhmz9hlLTUcILade","layer_level":0}],"wiki_items":[{"catalog_id":"691fd8f4-84d5-457c-80a8-984bc28ae544","content":"","title":"Technology Stack \u0026 Dependencies","description":"technology-stack","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"54ca3053-82f7-45c5-a0a9-f120d11b1785","gmt_create":"2025-09-22T11:07:14.886399-03:00","gmt_modified":"2025-09-22T11:07:14.894235-03:00"},{"catalog_id":"aa85f535-7e0e-4504-a7ce-6b31b4dd1050","content":"","title":"Project Overview","description":"project-overview","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"a93bc802-9365-4a24-b6bf-7d737429fbe3","gmt_create":"2025-09-22T11:08:28.877574-03:00","gmt_modified":"2025-09-22T11:08:28.892488-03:00"},{"catalog_id":"60954f52-83b0-4982-8f6a-e7d2faa3c179","content":"","title":"Domain Model \u0026 Data Structures","description":"domain-model","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"ce4fa48e-73ad-43bd-a32c-2fbfe5a1d6e4","gmt_create":"2025-09-22T11:11:24.838141-03:00","gmt_modified":"2025-09-22T11:11:24.84466-03:00"},{"catalog_id":"4053af3f-6536-4d0f-b41e-6f8cc3eac024","content":"","title":"Use Cases \u0026 Business Logic","description":"use-cases","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"948497f5-0b24-4574-a574-6e362d08f87b","gmt_create":"2025-09-22T11:13:12.98652-03:00","gmt_modified":"2025-09-22T11:13:12.991975-03:00"},{"catalog_id":"77ad1db1-b4fc-45a5-a9fd-f251529bb4b4","content":"","title":"Event-Driven Architecture","description":"event-driven-architecture","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"abbb2c06-0209-4bcc-a014-9e8b8e5144b1","gmt_create":"2025-09-22T11:15:36.508614-03:00","gmt_modified":"2025-09-22T11:15:36.514485-03:00"},{"catalog_id":"2623109a-022d-4570-aa53-eb5b4cc4249e","content":"","title":"Persistence Layer","description":"persistence-layer","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"d62b9734-60af-4f13-ae37-15649018bb8f","gmt_create":"2025-09-22T11:17:06.540886-03:00","gmt_modified":"2025-09-22T11:17:06.551621-03:00"},{"catalog_id":"2da89f45-176c-4d2a-b811-7e4e6819d35d","content":"","title":"Outbox \u0026 Saga Patterns","description":"outbox-saga-patterns","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"b18eebef-bbe8-4291-8735-1e24909dea8a","gmt_create":"2025-09-22T11:18:54.957374-03:00","gmt_modified":"2025-09-22T11:18:54.962892-03:00"},{"catalog_id":"36845801-3b35-4de8-bc4f-4e8b6b375266","content":"","title":"Configuration \u0026 Environment","description":"configuration-environment","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"5cf70d36-be6c-43ca-9bb3-c29ab4556906","gmt_create":"2025-09-22T11:21:47.585454-03:00","gmt_modified":"2025-09-22T11:21:47.604909-03:00"},{"catalog_id":"7fc75e3d-ea48-4abe-b7d4-54713108b556","content":"","title":"Testing Strategy","description":"testing-strategy","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"bf0c9858-27ea-4f99-8df0-f920ca664950","gmt_create":"2025-09-22T11:22:54.788047-03:00","gmt_modified":"2025-09-22T11:22:54.79384-03:00"},{"catalog_id":"a78e2296-42d6-407b-8a06-e4e307a7d22f","content":"","title":"Deployment Guide","description":"deployment-guide","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"079960a0-26d9-4acc-ab7e-33d678f350d7","gmt_create":"2025-09-22T11:24:40.448504-03:00","gmt_modified":"2025-09-22T11:24:40.453792-03:00"},{"catalog_id":"9e043efe-b53f-4f4b-b092-4ebe60b4babe","content":"","title":"Wallet","description":"wallet-model","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"ec1d750e-0f1c-4672-8b01-ad6e1c3d6ac5","gmt_create":"2025-09-22T11:28:58.530801-03:00","gmt_modified":"2025-09-22T11:28:58.536933-03:00"},{"catalog_id":"0da88566-363f-4168-905c-a7cdb8518e4b","content":"","title":"Create Wallet","description":"create-wallet","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"d9dcba06-f617-4359-930f-e42a9ed634f4","gmt_create":"2025-09-22T11:32:16.302722-03:00","gmt_modified":"2025-09-22T11:32:16.306653-03:00"},{"catalog_id":"d3caec72-4da8-4780-9ba6-445855e5db84","content":"","title":"Developer Setup","description":"developer-setup","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"32bb6c75-c17b-4b84-9731-4b669243eb09","gmt_create":"2025-09-22T11:32:22.023692-03:00","gmt_modified":"2025-09-22T11:32:22.028788-03:00"},{"catalog_id":"6f9f2b0d-609f-462c-aef6-f22b839595c3","content":"","title":"Domain Events","description":"domain-events","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"0eb750a5-01fe-4d86-9269-3f8493ebeeaa","gmt_create":"2025-09-22T11:36:30.189624-03:00","gmt_modified":"2025-09-22T11:36:30.197733-03:00"},{"catalog_id":"4feeebc4-c8b5-4f98-9015-a250807e05d3","content":"","title":"JPA Entities","description":"jpa-entities","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"b83feff1-111a-4f74-97d1-7f12c787eb50","gmt_create":"2025-09-22T11:36:33.249001-03:00","gmt_modified":"2025-09-22T11:36:33.255161-03:00"},{"catalog_id":"7bad130e-71aa-4c9f-88ae-6b81606e5bee","content":"","title":"Outbox Implementation","description":"outbox-implementation","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"fb78e5f5-3bb5-4051-9d35-75c403e35303","gmt_create":"2025-09-22T11:40:39.911303-03:00","gmt_modified":"2025-09-22T11:40:39.917355-03:00"},{"catalog_id":"4cc23b3f-4f13-4134-969d-a779d8ac51d1","content":"","title":"Transaction","description":"transaction-model","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"3c4a5eb3-25cb-44d0-893e-8906fae3420d","gmt_create":"2025-09-22T11:41:23.213593-03:00","gmt_modified":"2025-09-22T11:41:23.217489-03:00"},{"catalog_id":"59cc8e02-7927-4ce0-9981-2a64ffe73f96","content":"","title":"Add Funds","description":"add-funds","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"84c9840d-c46a-4df6-8585-1361ed8eaa94","gmt_create":"2025-09-22T11:45:31.012079-03:00","gmt_modified":"2025-09-22T11:45:31.015699-03:00"},{"catalog_id":"43452d36-a0c8-4387-8a1e-f95c8fa35aa7","content":"","title":"Kafka Integration","description":"kafka-integration","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"51b3f5f3-1606-4472-ad48-454d5a122b5f","gmt_create":"2025-09-22T11:48:19.923707-03:00","gmt_modified":"2025-09-22T11:48:19.929172-03:00"},{"catalog_id":"a45f0016-162d-469c-9242-554e2fd51cf7","content":"","title":"Repository Pattern Implementation","description":"repository-pattern","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"1531a2bb-7e5b-4bee-a485-aad5d0773fb6","gmt_create":"2025-09-22T11:52:23.509166-03:00","gmt_modified":"2025-09-22T11:52:23.514486-03:00"},{"catalog_id":"b71349e4-f46b-4956-a850-e153cc0a9d1d","content":"","title":"State Machine Configuration","description":"state-machine-configuration","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"c7350e77-c45a-4bc9-b8fa-db80069b0014","gmt_create":"2025-09-22T11:53:34.405119-03:00","gmt_modified":"2025-09-22T11:53:34.408471-03:00"},{"catalog_id":"8701abd9-8026-4832-bae1-d92d8c51e531","content":"","title":"User","description":"user-model","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"de98026c-8a6d-48b8-842a-af8265ef8854","gmt_create":"2025-09-22T11:54:33.976698-03:00","gmt_modified":"2025-09-22T11:54:33.980519-03:00"},{"catalog_id":"de69dd41-ed3f-40b0-9e1a-eb1d40f6536a","content":"","title":"Withdraw Funds","description":"withdraw-funds","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"61408fc3-924f-4ac7-9cba-788471974f26","gmt_create":"2025-09-22T11:55:51.375992-03:00","gmt_modified":"2025-09-22T11:55:51.38068-03:00"},{"catalog_id":"56e4c913-6efd-4038-9f53-a6905749d7bc","content":"","title":"Database Configuration","description":"database-configuration","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"4e5459df-b500-49a0-9fa3-c2fd38d8c441","gmt_create":"2025-09-22T11:57:24.107367-03:00","gmt_modified":"2025-09-22T11:57:24.11186-03:00"},{"catalog_id":"c23187d5-f52e-4baa-8926-b40e1e15009d","content":"","title":"Event Consumers","description":"event-consumers","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"ef3e1bfb-3cc1-45b1-8b7d-4a78d304bb90","gmt_create":"2025-09-22T11:58:10.600409-03:00","gmt_modified":"2025-09-22T11:58:10.606043-03:00"},{"catalog_id":"60e1de55-5f3a-45eb-abee-9e8a3192b46d","content":"","title":"Token","description":"token-model","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"559ecacd-2b5f-46c0-b13d-2e7ed2d1ec15","gmt_create":"2025-09-22T11:59:28.289655-03:00","gmt_modified":"2025-09-22T11:59:28.293155-03:00"},{"catalog_id":"94879722-4491-4a5c-9ad5-dc7e19e26878","content":"","title":"Transfer Funds","description":"transfer-funds","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"d0089d78-6c00-42fc-af2f-1815cd66db53","gmt_create":"2025-09-22T12:00:15.094645-03:00","gmt_modified":"2025-09-22T12:00:15.104835-03:00"},{"catalog_id":"789e8c60-3b4b-4b94-b129-871197030c86","content":"","title":"Outbox Pattern","description":"outbox-pattern","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"ce268829-9e94-4c57-81d2-759e03369a4a","gmt_create":"2025-09-22T12:02:27.579504-03:00","gmt_modified":"2025-09-22T12:02:27.585971-03:00"},{"catalog_id":"da643e96-9bb7-47e5-b266-da0f3e96529f","content":"","title":"Vault","description":"vault-model","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"620ec0d0-4bae-4b04-a926-92317891c82c","gmt_create":"2025-09-22T12:03:57.69968-03:00","gmt_modified":"2025-09-22T12:03:57.703193-03:00"},{"catalog_id":"5f7d2d9b-3075-41d4-b456-062387274e6f","content":"","title":"Confirm Transaction","description":"confirm-transaction","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"0661ee96-6d5f-4057-8935-ea333ce68d41","gmt_create":"2025-09-22T12:05:49.559151-03:00","gmt_modified":"2025-09-22T12:05:49.56462-03:00"},{"catalog_id":"5dbd83a1-bdbd-4d23-9534-72e0d738d218","content":"","title":"Fail Transaction","description":"fail-transaction","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"d87afe33-4b26-4239-8c59-733c17a4187f","gmt_create":"2025-09-22T12:06:53.532875-03:00","gmt_modified":"2025-09-22T12:06:53.536537-03:00"},{"catalog_id":"9bb7b176-b85f-4338-965e-2351d3c3a9ff","content":"","title":"Create Transaction","description":"create-transaction","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"6faf4b21-f1cd-4533-b26b-a88081975b40","gmt_create":"2025-09-22T12:08:49.015726-03:00","gmt_modified":"2025-09-22T12:08:49.019668-03:00"},{"catalog_id":"f1e7faa6-cbbf-42be-bc5b-07b5cfee06f5","content":"","title":"Check Balance","description":"check-balance","extend":"{}","progress_status":"completed","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","id":"780eea63-efce-40b8-8177-5b240c03ff8b","gmt_create":"2025-09-22T12:10:58.455284-03:00","gmt_modified":"2025-09-22T12:10:58.46039-03:00"}],"wiki_overview":{"content":"\u003cblog\u003e\n# Comprehensive Project Analysis: Wallet Hub\n\n## 1. Project Introduction\n\n### Purpose Statement\nThe Wallet Hub is an event-driven wallet service built with Spring Boot and Spring Cloud Stream that models wallet operations such as creating wallets, adding funds, withdrawing funds, and transferring funds between wallets. The system publishes and consumes domain events via Kafka, implementing a clean architecture with ports-and-adapters pattern.\n\n### Core Goals and Objectives\n- Implement a robust wallet management system with event-driven architecture\n- Provide reliable transaction processing with outbox and saga/state-machine patterns\n- Support multiple persistence options (H2, Postgres, Redis, MongoDB) through Docker Compose\n- Enable traceability and monitoring through CloudEvents, Micrometer, and distributed tracing\n- Facilitate integration with external systems through Apache Camel and Spring Cloud Stream\n\n### Target Audience\n- Backend developers working on financial applications\n- Architects designing event-driven microservices\n- Teams implementing digital wallet solutions\n- Developers interested in Clean Architecture and Domain-Driven Design patterns\n\n## 2. Technical Architecture\n\n### Component Breakdown\nThe application follows a Clean Architecture (ports-and-adapters) pattern with clear separation between domain logic, use cases, infrastructure, and external integrations.\n\n```mermaid\nflowchart TD\n    A[Client] --\u003e B[API Layer]\n    B --\u003e C[Use Cases]\n    C --\u003e D[Domain Model]\n    D --\u003e E[Gateways]\n    E --\u003e F[Infrastructure]\n    F --\u003e G[(Database)]\n    F --\u003e H[Kafka]\n    F --\u003e I[Redis/MongoDB]\n```\n\n### Design Patterns\n- **Ports and Adapters (Clean Architecture)**: Clear separation between business logic and infrastructure concerns\n- **Domain Events**: Event-driven communication between components\n- **Outbox Pattern**: Ensures reliable message delivery\n- **Saga/State Machine**: Manages complex workflows and transaction consistency\n- **Repository Pattern**: Abstracts data access through gateway interfaces\n\n### System Relationships\n```mermaid\ngraph TD\n    A[Use Cases] --\u003e B[Domain Model]\n    A --\u003e C[Gateways]\n    B --\u003e C\n    C --\u003e D[Infrastructure Providers]\n    D --\u003e E[JPA Repositories]\n    D --\u003e F[Kafka Producers/Consumers]\n    D --\u003e G[State Machine]\n    H[Domain Events] --\u003e F\n    F --\u003e I[Kafka Topics]\n    J[Event Consumers] --\u003e K[Update State]\n```\n\n### Data Flow\n```mermaid\nflowchart LR\n    Client --\u003e UseCase[Use Case Execution]\n    UseCase --\u003e Repository[Repository Operations]\n    UseCase --\u003e EventPublisher[Domain Event Publishing]\n    EventPublisher --\u003e Outbox[Outbox Storage]\n    Outbox --\u003e KafkaProducer[Kafka Event Producer]\n    KafkaProducer --\u003e Kafka[Kafka Broker]\n    KafkaConsumer[Kafka Event Consumer] --\u003e EventHandler[Event Handling]\n    EventHandler --\u003e UpdateState[State Update]\n```\n\n## 3. Key Implementation\n\n### Main Entry Points\n- Application main: `dev.bloco.wallet.hub.WalletHubApplication`\n- Messaging configuration: Functional producers/consumers via Spring Cloud Stream\n- Outbox publisher and saga state machine: `infra/provider/data/config`\n\nSources:\n- [WalletHubApplication.java](src/main/java/dev/bloco/wallet/hub/WalletHubApplication.java)\n\n### Core Modules\n- **Domain**: Contains business entities, events, and gateways\n- **Use Cases**: Implements business logic and workflows\n- **Infrastructure**: Handles data persistence, messaging, and external integrations\n- **Configuration**: Sets up Spring Boot, Kafka, and other services\n\nSources:\n- [AddFundsUseCase.java](src/main/java/dev/bloco/wallet/hub/usecase/AddFundsUseCase.java)\n- [CreateWalletUseCase.java](src/main/java/dev/bloco/wallet/hub/usecase/CreateWalletUseCase.java)\n- [WalletRepository.java](src/main/java/dev/bloco/wallet/hub/domain/gateway/WalletRepository.java)\n\n### Configuration Approach\nThe application uses Spring Boot's configuration approach with YAML-based properties and environment variable overrides. Default configuration is provided in `application.yml` with support for different databases and messaging systems.\n\nSources:\n- [application.yml](src/main/resources/application.yml)\n\n### External Dependencies\nKey dependencies include:\n- Spring Boot 3.5.5 with WebFlux, Security, and Actuator\n- Spring Cloud 2025.0.x for configuration and streaming\n- Kafka for event streaming\n- JPA/R2DBC for data persistence\n- Spring Statemachine for saga patterns\n- MapStruct for object mapping\n- Micrometer for observability\n\nSources:\n- [pom.xml](pom.xml)\n\n### Integration Points\n- Kafka: Event publishing and consumption\n- Multiple databases: H2 (default), Postgres, MongoDB, Redis\n- Docker Compose: Local infrastructure provisioning\n- Spring Cloud Config: Configuration management\n- Apache Camel: Enterprise integration patterns\n\nSources:\n- [compose.yaml](compose.yaml)\n\n### Component Relationships\n```mermaid\ngraph LR\n    UseCases[Use Cases] --\u003e Domain[Domain Model]\n    UseCases --\u003e Gateways[Gateways]\n    Gateways --\u003e JPA[JPA Repositories]\n    Gateways --\u003e Kafka[Kafka Producers]\n    Kafka --\u003e Topics[Kafka Topics]\n    Topics --\u003e Consumers[Event Consumers]\n    Consumers --\u003e Services[Service Logic]\n    Domain --\u003e Events[Domain Events]\n    Events --\u003e Publisher[Event Publisher]\n    Publisher --\u003e Outbox[Outbox Storage]\n    Outbox --\u003e Kafka\n```\n\n## 4. Key Features\n\n### Functionality Overview\nThe Wallet Hub provides comprehensive wallet management capabilities:\n- Wallet creation and management\n- Funds addition, withdrawal, and transfer\n- Transaction processing and tracking\n- Event-driven notifications\n- Saga-based workflow management\n\n### Implementation Highlights\n- **Event-Driven Architecture**: Uses domain events to decouple components\n- **Clean Architecture**: Clear separation of concerns between layers\n- **Multiple Persistence Options**: Supports various database technologies\n- **Reactive Programming**: Leverages Spring WebFlux for non-blocking operations\n- **Observability**: Includes metrics, tracing, and health checks\n\nSources:\n- [WalletCreatedEvent.java](src/main/java/dev/bloco/wallet/hub/domain/event/wallet/WalletCreatedEvent.java)\n- [FundsAddedEvent.java](src/main/java/dev/bloco/wallet/hub/domain/event/wallet/FundsAddedEvent.java)\n- [DomainEventPublisher.java](src/main/java/dev/bloco/wallet/hub/domain/event/common/DomainEventPublisher.java)\n\n### Feature Architecture\n```mermaid\nstateDiagram-v2\n    [*] --\u003e Idle\n    Idle --\u003e WalletCreation: CreateWalletCommand\n    WalletCreation --\u003e WalletCreated: WalletCreatedEvent\n    WalletCreated --\u003e FundsOperation: AddFundsCommand\n    FundsOperation --\u003e FundsAdded: FundsAddedEvent\n    FundsOperation --\u003e FundsTransferred: FundsTransferredEvent\n    FundsOperation --\u003e FundsWithdrawn: FundsWithdrawnEvent\n    FundsAdded --\u003e TransactionProcessing: ProcessTransaction\n    TransactionProcessing --\u003e TransactionConfirmed: TransactionConfirmedEvent\n    TransactionConfirmed --\u003e Idle: Complete\n    ErrorState \u003c--\u003e AllStates: Error Handling\n```\n\u003c/blog\u003e","gmt_create":"2025-09-22T10:57:43.786963-03:00","gmt_modified":"2025-09-22T10:57:43.786963-03:00","id":"a9a321a4-208d-4829-824f-dc9e4557e0db","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":""},"wiki_readme":{"content":"No readme file","gmt_create":"2025-09-22T10:47:37.770231-03:00","gmt_modified":"2025-09-22T10:47:37.770231-03:00","id":"7fbfab45-442a-498c-9dba-77e7b2c56ced","repo_id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":""},"wiki_repo":{"id":"9e6d84f0-d4e9-422f-b2cd-e48caf7e9285","workspace_path":"","name":"bloco-wallet-java","progress_status":"completed","wiki_present_status":"COMPLETED","optimized_catalog":"\".\\n├── src\\n│   ├── main\\n│   │   ├── java/dev/bloco/wallet/hub\\n│   │   │   ├── config\\n│   │   │   │   ├── DinamoLibraryLoader.java\\n│   │   │   │   └── UseCaseConfig.java\\n│   │   │   ├── domain\\n│   │   │   │   ├── event\\n│   │   │   │   │   ├── address\\n│   │   │   │   │   │   ├── AddressCreatedEvent.java\\n│   │   │   │   │   │   └── AddressStatusChangedEvent.java\\n│   │   │   │   │   ├── common\\n│   │   │   │   │   │   ├── DomainEvent.java\\n│   │   │   │   │   │   └── DomainEventPublisher.java\\n│   │   │   │   │   ├── contract\\n│   │   │   │   │   │   ├── ContractDeployedEvent.java\\n│   │   │   │   │   │   ├── ContractInteractionEvent.java\\n│   │   │   │   │   │   ├── ContractOwnerAddedEvent.java\\n│   │   │   │   │   │   └── ContractOwnerRemovedEvent.java\\n│   │   │   │   │   ├── network\\n│   │   │   │   │   │   ├── NetworkAddedEvent.java\\n│   │   │   │   │   │   └── NetworkStatusChangedEvent.java\\n│   │   │   │   │   ├── store\\n│   │   │   │   │   │   ├── AddressAddedToStoreEvent.java\\n│   │   │   │   │   │   ├── StoreCreatedEvent.java\\n│   │   │   │   │   │   └── StoreStatusChangedEvent.java\\n│   │   │   │   │   ├── token\\n│   │   │   │   │   │   ├── TokenBalanceChangedEvent.java\\n│   │   │   │   │   │   └── TokenCreatedEvent.java\\n│   │   │   │   │   ├── transaction\\n│   │   │   │   │   │   ├── TransactionConfirmedEvent.java\\n│   │   │   │   │   │   ├── TransactionCreatedEvent.java\\n│   │   │   │   │   │   └── TransactionStatusChangedEvent.java\\n│   │   │   │   │   ├── vault\\n│   │   │   │   │   │   ├── KeyPairGeneratedEvent.java\\n│   │   │   │   │   │   ├── VaultCreatedEvent.java\\n│   │   │   │   │   │   └── VaultStatusChangedEvent.java\\n│   │   │   │   │   └── wallet\\n│   │   │   │   │       ├── AddressAddedToWalletEvent.java\\n│   │   │   │   │       ├── AddressRemovedFromWalletEvent.java\\n│   │   │   │   │       ├── FundsAddedEvent.java\\n│   │   │   │   │       ├── FundsTransferredEvent.java\\n│   │   │   │   │       ├── FundsWithdrawnEvent.java\\n│   │   │   │   │       ├── WalletCreatedEvent.java\\n│   │   │   │   │       └── WalletUpdatedEvent.java\\n│   │   │   │   ├── gateway\\n│   │   │   │   │   ├── AddressRepository.java\\n│   │   │   │   │   ├── ContractRepository.java\\n│   │   │   │   │   ├── DomainEventPublisher.java\\n│   │   │   │   │   ├── NetworkRepository.java\\n│   │   │   │   │   ├── StoreRepository.java\\n│   │   │   │   │   ├── TokenBalanceRepository.java\\n│   │   │   │   │   ├── TokenRepository.java\\n│   │   │   │   │   ├── TransactionRepository.java\\n│   │   │   │   │   ├── UserRepository.java\\n│   │   │   │   │   ├── VaultRepository.java\\n│   │   │   │   │   └── WalletRepository.java\\n│   │   │   │   └── model\\n│   │   │   │       ├── address\\n│   │   │   │       │   ├── AccountAddress.java\\n│   │   │   │       │   ├── Address.java\\n│   │   │   │       │   ├── AddressStatus.java\\n│   │   │   │       │   ├── AddressType.java\\n│   │   │   │       │   └── PublicKey.java\\n│   │   │   │       ├── common\\n│   │   │   │       │   ├── AggregateRoot.java\\n│   │   │   │       │   └── Entity.java\\n│   │   │   │       ├── contract\\n│   │   │   │       │   ├── Contract.java\\n│   │   │   │       │   └── ContractABI.java\\n│   │   │   │       ├── network\\n│   │   │   │       │   ├── Network.java\\n│   │   │   │       │   └── NetworkStatus.java\\n│   │   │   │       ├── store\\n│   │   │   │       │   ├── Store.java\\n│   │   │   │       │   └── StoreStatus.java\\n│   │   │   │       ├── token\\n│   │   │   │       │   ├── Token.java\\n│   │   │   │       │   ├── TokenBalance.java\\n│   │   │   │       │   └── TokenType.java\\n│   │   │   │       ├── transaction\\n│   │   │   │       │   ├── Transaction.java\\n│   │   │   │       │   ├── TransactionHash.java\\n│   │   │   │       │   ├── TransactionStatus.java\\n│   │   │   │       │   └── TransactionType.java\\n│   │   │   │       ├── user\\n│   │   │   │       │   └── User.java\\n│   │   │   │       ├── vault\\n│   │   │   │       │   ├── KeyGenerationResult.java\\n│   │   │   │       │   ├── Vault.java\\n│   │   │   │       │   ├── VaultConfiguration.java\\n│   │   │   │       │   ├── VaultStatus.java\\n│   │   │   │       │   └── VaultType.java\\n│   │   │   │       └── Wallet.java\\n│   │   │   ├── infra\\n│   │   │   │   ├── adapter/event\\n│   │   │   │   │   ├── consumer\\n│   │   │   │   │   │   ├── FundsAddedEventConsumer.java\\n│   │   │   │   │   │   ├── FundsTransferredEventConsumer.java\\n│   │   │   │   │   │   ├── FundsWithdrawnEventConsumer.java\\n│   │   │   │   │   │   └── WalletCreatedEventConsumer.java\\n│   │   │   │   │   ├── producer\\n│   │   │   │   │   │   ├── EventProducer.java\\n│   │   │   │   │   │   └── KafkaEventProducer.java\\n│   │   │   │   │   └── OutboxEventPublisher.java\\n│   │   │   │   ├── provider\\n│   │   │   │   │   ├── data\\n│   │   │   │   │   │   ├── config\\n│   │   │   │   │   │   │   ├── SagaEvents.java\\n│   │   │   │   │   │   │   ├── SagaStateMachineConfig.java\\n│   │   │   │   │   │   │   ├── SagaStates.java\\n│   │   │   │   │   │   │   └── StandardSagaStateMachineConfig.java\\n│   │   │   │   │   │   ├── entity\\n│   │   │   │   │   │   │   ├── TransactionEntity.java\\n│   │   │   │   │   │   │   ├── UserEntity.java\\n│   │   │   │   │   │   │   └── WalletEntity.java\\n│   │   │   │   │   │   ├── repository\\n│   │   │   │   │   │   │   ├── JpaTransactionRepository.java\\n│   │   │   │   │   │   │   ├── JpaUserRepository.java\\n│   │   │   │   │   │   │   ├── JpaWalletRepository.java\\n│   │   │   │   │   │   │   ├── OutboxRepository.java\\n│   │   │   │   │   │   │   ├── SpringDataTransactionRepository.java\\n│   │   │   │   │   │   │   ├── SpringDataUserRepository.java\\n│   │   │   │   │   │   │   ├── SpringDataWalletRepository.java\\n│   │   │   │   │   │   │   └── StateMachineRepository.java\\n│   │   │   │   │   │   ├── OutboxEvent.java\\n│   │   │   │   │   │   ├── OutboxService.java\\n│   │   │   │   │   │   └── OutboxWorker.java\\n│   │   │   │   │   └── mapper\\n│   │   │   │   │       ├── TransactionMapper.java\\n│   │   │   │   │       ├── UserMapper.java\\n│   │   │   │   │       └── WalletMapper.java\\n│   │   │   │   └── util\\n│   │   │   │       └── CloudEventUtils.java\\n│   │   │   ├── usecase\\n│   │   │   │   ├── AddFundsUseCase.java\\n│   │   │   │   ├── CheckBalanceUseCase.java\\n│   │   │   │   ├── ConfirmTransactionUseCase.java\\n│   │   │   │   ├── CreateTransactionUseCase.java\\n│   │   │   │   ├── CreateWalletUseCase.java\\n│   │   │   │   ├── FailTransactionUseCase.java\\n│   │   │   │   ├── TransferFundsUseCase.java\\n│   │   │   │   └── WithdrawFundsUseCase.java\\n│   │   │   └── WalletHubApplication.java\\n│   │   └── resources\\n│   │       └── application.yml\\n│   └── test/java/dev/bloco/wallet/hub\\n│       ├── domain\\n│       │   ├── event\\n│       │   │   ├── FundsAddedEventTest.java\\n│       │   │   ├── FundsTransferredEventTest.java\\n│       │   │   ├── FundsWithdrawnEventTest.java\\n│       │   │   └── WalletCreatedEventTest.java\\n│       │   ├── TransactionTest.java\\n│       │   ├── UserTest.java\\n│       │   └── WalletTest.java\\n│       ├── infra\\n│       │   ├── adapter/event\\n│       │   │   ├── consumer\\n│       │   │   │   ├── FundsAddedEventConsumerTest.java\\n│       │   │   │   ├── FundsTransferredEventConsumerTest.java\\n│       │   │   │   ├── FundsWithdrawnEventConsumerTest.java\\n│       │   │   │   └── WalletCreatedEventConsumerTest.java\\n│       │   │   ├── producer\\n│       │   │   │   └── KafkaEventProducerTest.java\\n│       │   │   └── OutboxEventPublisherTest.java\\n│       │   ├── provider/data\\n│       │   │   ├── config\\n│       │   │   │   ├── SagaEnumsTest.java\\n│       │   │   │   ├── SagaStateMachineConfigTest.java\\n│       │   │   │   └── StandardSagaStateMachineConfigTest.java\\n│       │   │   ├── entity\\n│       │   │   │   ├── TransactionEntityTest.java\\n│       │   │   │   ├── UserEntityTest.java\\n│       │   │   │   └── WalletEntityTest.java\\n│       │   │   ├── repository\\n│       │   │   │   ├── JpaTransactionRepositoryTest.java\\n│       │   │   │   ├── JpaUserRepositoryTest.java\\n│       │   │   │   ├── JpaWalletRepositoryTest.java\\n│       │   │   │   ├── OutboxRepositoryTest.java\\n│       │   │   │   ├── SpringDataTransactionRepositoryTest.java\\n│       │   │   │   ├── SpringDataUserRepositoryTest.java\\n│       │   │   │   ├── SpringDataWalletRepositoryTest.java\\n│       │   │   │   └── StateMachineRepositoryTest.java\\n│       │   │   └── OutboxServiceTest.java\\n│       │   └── util\\n│       │       └── CloudEventUtilsTest.java\\n│       └── usecase\\n│           ├── AddFundsUseCaseTest.java\\n│           ├── CheckBalanceUseCaseTest.java\\n│           ├── CreateWalletUseCaseTest.java\\n│           ├── TransferFundsUseCaseTest.java\\n│           └── WithdrawFundsUseCaseTest.java\\n├── CHANGELOG.md\\n├── README.md\\n├── compose.yaml\\n├── mise.toml\\n├── mvnw.cmd\\n└── pom.xml\\n\"","current_document_structure":"WikiEncrypted:","catalogue_think_content":"WikiEncrypted:","recovery_checkpoint":"wiki_generation_completed","last_commit_id":"e9068af58213ee74817551662efc5c02e65d7c8a","last_commit_update":"2025-09-18T20:25:49-03:00","gmt_create":"2025-09-22T10:47:29.170956-03:00","gmt_modified":"2025-09-22T12:10:59.505615-03:00","extend_info":"{\"language\":\"en\",\"active\":true,\"branch\":\"main\",\"shareStatus\":\"\",\"server_error_code\":\"\",\"cosy_version\":\"0.2.3\"}"}}